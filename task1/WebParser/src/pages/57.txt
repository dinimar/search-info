
<!DOCTYPE html>
<html lang="ru-ru" dir="ltr" class='com_content view-article itemid-106 j39 mm-hover '>
<head>
<link href="https://www.startandroid.ru/templates/mycustomcss.css" rel="stylesheet" type="text/css">
	<base href="https://startandroid.ru/en/lessons/220-lesson-16-creating-layout-programmatically-layoutparams.html"/>
	<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
	<meta name="keywords" content="LayoutParams, setContentView, addView, ViewGroup, LinearLayout"/>
	<meta name="rights" content="StartAndroid"/>
	<meta name="og:title" content="Lesson 16. Creating layout programmatically. LayoutParams"/>
	<meta name="og:type" content="article"/>
	<meta name="og:image" content="https://lh4.googleusercontent.com/-F91ssebAJlo/Tm-ZlYN7LzI/AAAAAAAAAUE/noad5YNMnds/s800/20110913_L0016_L_ViewGroups.png"/>
	<meta name="og:url" content="https://startandroid.ru/en/lessons/220-lesson-16-creating-layout-programmatically-layoutparams.html"/>
	<meta name="og:site_name" content="StartAndroid"/>
	<meta name="og:description" content="How to create layout programmaticaly in Android."/>
	<meta name="author" content="Dmitry Vinogradov"/>
	<meta name="description" content="How to create layout programmaticaly in Android."/>
	<meta name="generator" content="Joomla! - Open Source Content Management"/>
	<title>Lesson 16. Creating layout programmatically. LayoutParams</title>
	<link href="https://startandroid.ru/ru/uroki/vse-uroki-spiskom/49-16-layoutparams.html" rel="alternate" hreflang="ru-RU"/>
	<link href="https://startandroid.ru/en/lessons/220-lesson-16-creating-layout-programmatically-layoutparams.html" rel="alternate" hreflang="en-GB"/>
	<link href="/templates/purity_iii/favicon.ico" rel="shortcut icon" type="image/vnd.microsoft.icon"/>
	<link href="/A.templates,,_purity_iii,,_local,,_css,,_bootstrap.css+components,,_com_jcomments,,_tpl,,_default,,_style.css,,qv==3002+plugins,,_content,,_hs_highlighter,,_lib,,_styles,,_shCore.css+plugins,,_content,,_hs_highlighter,,_lib,,_styles,,_shThemeDefault.css,Mcc.g9s2Fj-V5G.css.pagespeed.cf.C1U8Cas-X8.css" rel="stylesheet" type="text/css"/>
	
	
	
	<link href="http://www.startandroid.ru/plugins/content/jfusion/discussbot/tmpl/default/jfusion.css" rel="stylesheet" type="text/css"/>
	<link href="/A.templates,,_system,,_css,,_system.css+templates,,_purity_iii,,_local,,_css,,_template.css+templates,,_purity_iii,,_local,,_css,,_megamenu.css+templates,,_purity_iii,,_local,,_css,,_off-canvas.css+templates,,_purity_iii,,_fonts,,_font-awesome,,_css,,_font-awesome.min.css+templates,,_purity_iii,,_local,,_css,,_layouts,,_corporate.css+plugins,,_system,,_mediabox_ck,,_assets,,_mediaboxck.css+media,,_mod_languages,,_css,,_template.css,,q092552cf642fe2bdd8a0d9879112de23,Mcc.8bkeEgaG8c.css.pagespeed.cf.NQwL-2HVTk.css" rel="stylesheet" type="text/css"/>
	
	
	
	
	
	
	
	<style type="text/css">#mbCenter,#mbToolbar{background-color:#1a1a1a;-webkit-border-radius:10px;-khtml-border-radius:10px;-moz-border-radius:10px;border-radius:10px;-webkit-box-shadow:0 5px 20px rgba(0,0,0,.50);-khtml-box-shadow:0 5px 20px rgba(0,0,0,.50);-moz-box-shadow:0 5px 20px rgba(0,0,0,.50);box-shadow:0 5px 20px rgba(0,0,0,.50);-ms-filter:"progid:DXImageTransform.Microsoft.Shadow(Strength=5, Direction=180, Color='#000000')";filter: progid:DXImageTransform.Microsoft.Shadow(Strength=5, Direction=180, Color='#000000')}#mbOverlay{background-color:#000}#mbCenter.mbLoading{background-color:#1a1a1a}#mbBottom{color:#999}#mbTitle,#mbPrevLink,#mbNextLink,#mbCloseLink,#mbPlayLink,#mbPauseLink,#mbZoomMinus,#mbZoomValue,#mbZoomPlus{color:#fff}</style>
	<script type="application/json" class="joomla-script-options new">{"csrf.token":"ed37a4ab8f272e400044c1ea8adb7ccf","system.paths":{"root":"","base":""},"joomla.jtext":{"BUTTON_CANCEL":"Cancel","BUTTON_INITIATE":"Initiate Discussion","BUTTON_PUBLISH_NEW_DISCUSSION":"Publish New Discussion","BUTTON_REPUBLISH_DISCUSSION":"Republish Discussion","BUTTON_UNPUBLISH_DISCUSSION":"Unpublish Discussion","CONFIRM_THREAD_CREATION":"Initiate the discussion bot for this article? A thread will automatically be created in the forum and associated with this article.","CONFIRM_UNPUBLISH_DISCUSSION":"Do you want to unpublish this discussion? Note that this will not manipulate the forum in any way. It will simply remove the discussion from the article.","CONFIRM_PUBLISH_DISCUSSION":"This article has been previously initiated. Click 'Republish Discussion' to associate the article with the existing discussion (this can be undone by simply clicking 'Uninitiate Discussion' after initializing). Or click 'Publish New Discussion' to create a new thread and associate the article with the new discussion.","DISCUSSBOT_ERROR":"Error","HIDE_REPLIES":"Hide Replies","JYES":"Yes","SHOW_REPLIES":"Show Replies","SUBMITTING_QUICK_REPLY":"Submitting quick reply..."}}</script>
	<script src="/media/system/js/mootools-core.js,q092552cf642fe2bdd8a0d9879112de23.pagespeed.jm.ywlvbuicbl.js" type="text/javascript"></script>
	<script src="/media/system/js/core.js,q092552cf642fe2bdd8a0d9879112de23.pagespeed.ce.I4kCTD093I.js" type="text/javascript"></script>
	<script src="/media/system/js/mootools-more.js,q092552cf642fe2bdd8a0d9879112de23.pagespeed.jm.-6O1zP2hFm.js" type="text/javascript"></script>
	<script src="/plugins/content/hs_highlighter/lib/scripts/shCore.js+shAutoloader.js.pagespeed.jc.WXf0A72UUc.js"></script><script>eval(mod_pagespeed_su9IpL5SVr);</script>
	<script>eval(mod_pagespeed_WeiLV__hGm);</script>
	<script src="/media/jui/js/jquery.min.js,q092552cf642fe2bdd8a0d9879112de23.pagespeed.jm.Esjhv-eXHl.js" type="text/javascript"></script>
	<script src="/media,_jui,_js,_jquery-noconflict.js,q092552cf642fe2bdd8a0d9879112de23+media,_jui,_js,_jquery-migrate.min.js,q092552cf642fe2bdd8a0d9879112de23+plugins,_system,_t3,_base-bs3,_bootstrap,_js,_bootstrap.js,q092552cf642fe2bdd8a0d9879112de23+media,_system,_js,_caption.js,q092552cf642fe2bdd8a0d9879112de23+plugins,_system,_t3,_base-bs3,_js,_jquery.tap.min.js.pagespeed.jc.Zgymc-Cw8E.js"></script><script>eval(mod_pagespeed_mx8RjjKG3V);</script>
	<script>eval(mod_pagespeed_EEHT5I5lbD);</script>
	<script src="http://www.startandroid.ru/plugins/content/jfusion/discussbot/tmpl/default/jfusion.js" type="text/javascript"></script>
	<script>eval(mod_pagespeed_y3OBNTle2M);</script>
	<script>eval(mod_pagespeed_UCstg9erlS);</script>
	<script>eval(mod_pagespeed_1XadJYvQRa);</script>
	<script src="/plugins,_system,_t3,_base-bs3,_js,_off-canvas.js+plugins,_system,_t3,_base-bs3,_js,_script.js+plugins,_system,_t3,_base-bs3,_js,_menu.js+templates,_purity_iii,_js,_script.js+plugins,_system,_t3,_base-bs3,_js,_nav-collapse.js+plugins,_system,_mediabox_ck,_assets,_mediaboxck.min.js,qver==2.4.0.pagespeed.jc.tzMQyIb0Wy.js"></script><script>eval(mod_pagespeed_r6BAo9HvrJ);</script>
	<script>eval(mod_pagespeed_$6DR3H2ba0);</script>
	<script>eval(mod_pagespeed_oaBYG6qGe9);</script>
	<script>eval(mod_pagespeed_AmCkxaCr$c);</script>
	<script>eval(mod_pagespeed_ZlfQYd6O1_);</script>
	<script>eval(mod_pagespeed_rDcvdPCnuH);</script>
	<script type="text/javascript">window.addEvent('load',function(){var siteurl='https://startandroid.ru/';function path(){var args=arguments,result=[];for(var i=0;i<args.length;i++){result.push(args[i].replace('@',[siteurl,'plugins/content/hs_highlighter/lib/scripts/'].join('')));}return result;};SyntaxHighlighter.autoloader.apply(null,path('applescript            @shBrushAppleScript.js','actionscript3 as3      @shBrushAS3.js','bash shell             @shBrushBash.js','coldfusion cf          @shBrushColdFusion.js','cpp c                  @shBrushCpp.js','c# c-sharp csharp      @shBrushCSharp.js','css                    @shBrushCss.js','delphi pascal          @shBrushDelphi.js','diff patch pas         @shBrushDiff.js','erl erlang             @shBrushErlang.js','groovy                 @shBrushGroovy.js','java                   @shBrushJava.js','jfx javafx             @shBrushJavaFX.js','js jscript javascript  @shBrushJScript.js','perl pl                @shBrushPerl.js','php                    @shBrushPhp.js','text plain             @shBrushPlain.js','py python              @shBrushPython.js','ruby rails ror rb      @shBrushRuby.js','sass scss              @shBrushSass.js','scala                  @shBrushScala.js','sql                    @shBrushSql.js','vb vbnet               @shBrushVb.js','xml xhtml xslt html    @shBrushXml.js'));SyntaxHighlighter.defaults['auto-links']=false;SyntaxHighlighter.defaults['toolbar']=false;;SyntaxHighlighter.all();});JFusion.view='article';JFusion.enablePagination=1;JFusion.enableJumpto=0;JFusion.articelUrl[220]='/en/lessons/220-lesson-16-creating-layout-programmatically-layoutparams.html';jQuery(function($){initTooltips();$("body").on("subform-row-add",initTooltips);function initTooltips(event,container){container=container||document;$(container).find(".hasTooltip").tooltip({"html":true,"container":"body"});}});jQuery(window).on('load',function(){new JCaption('img.caption');});Mediabox.scanPage=function(){var links=jQuery('a').filter(function(i){if(jQuery(this).attr('rel')&&jQuery(this).data('mediaboxck_done')!='1'){var patt=new RegExp(/^lightbox/i);return patt.test(jQuery(this).attr('rel'));}});if(!links.length)return false;new Mediaboxck(links,{overlayOpacity:0.7,resizeOpening:1,resizeDuration:240,initialWidth:320,initialHeight:180,fullWidth:'0',defaultWidth:'640',defaultHeight:'360',showCaption:1,showCounter:1,loop:0,isMobileEnable:1,isMobile:false,mobileResolution:'640',attribType:'rel',showToolbar:'0',diapoTime:'3000',diapoAutoplay:'0',toolbarSize:'normal',medialoop:false,showZoom:0,counterText:'({x} of {y})',playerpath:'/plugins/system/mediabox_ck/assets/NonverBlaster.swf'},null,function(curlink,el){var rel0=curlink.rel.replace(/[[]|]/gi," ");var relsize=rel0.split(" ");return(curlink==el)||((curlink.rel.length>8)&&el.rel.match(relsize[1]));});};jQuery(document).ready(function(){Mediabox.scanPage();});</script>
	<link href="https://startandroid.ru/ru/uroki/vse-uroki-spiskom/49-16-layoutparams.html" rel="alternate" hreflang="x-default"/>

	
<!-- META FOR IOS & HANDHELD -->
	<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"/>
	<style type="text/stylesheet">@-webkit-viewport   { width: device-width; }@-moz-viewport      { width: device-width; }@-ms-viewport       { width: device-width; }@-o-viewport        { width: device-width; }@viewport           { width: device-width; }</style>
	<script type="text/javascript">if(navigator.userAgent.match(/IEMobile\/10\.0/)){var msViewportStyle=document.createElement("style");msViewportStyle.appendChild(document.createTextNode("@-ms-viewport{width:auto!important}"));document.getElementsByTagName("head")[0].appendChild(msViewportStyle);}</script>
<meta name="HandheldFriendly" content="true"/>
<meta name="apple-mobile-web-app-capable" content="YES"/>
<!-- //META FOR IOS & HANDHELD -->




<!-- Le HTML5 shim and media query for IE8 support -->
<!--[if lt IE 9]>
<script src="//html5shim.googlecode.com/svn/trunk/html5.js"></script>
<script type="text/javascript" src="/plugins/system/t3/base-bs3/js/respond.min.js"></script>
<![endif]-->

<!-- You can add Google Analytics here or use T3 Injection feature -->

<!--[if lt IE 9]>
<link rel="stylesheet" href="/templates/purity_iii/css/ie8.css" type="text/css" />
<![endif]-->
	</head>

<body>

<div class="t3-wrapper corporate"> <!-- Need this wrapper for off-canvas menu. Remove if you don't use of-canvas -->

	
<!-- MAIN NAVIGATION -->
<header id="t3-mainnav" class="wrap navbar navbar-default navbar-fixed-top t3-mainnav">

	<!-- OFF-CANVAS -->
			
<button class="btn btn-default off-canvas-toggle " type="button" data-pos="left" data-nav="#t3-off-canvas" data-effect="off-canvas-effect-4">
  <i class="fa fa-bars"></i>
</button>

<!-- OFF-CANVAS SIDEBAR -->
<div id="t3-off-canvas" class="t3-off-canvas ">

  <div class="t3-off-canvas-header">
    <h2 class="t3-off-canvas-header-title">Sidebar</h2>
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
  </div>

  <div class="t3-off-canvas-body">
    <div class="t3-module module " id="Mod100"><div class="module-inner"><h3 class="module-title "><span>Most read</span></h3><div class="module-ct"><ul class="mostread mod-list">
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/225-lesson-19-creating-a-simple-calculator.html" itemprop="url">
			<span itemprop="name">
				Lesson 19. Creating a simple calculator			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/220-lesson-16-creating-layout-programmatically-layoutparams.html" itemprop="url">
			<span itemprop="name">
				Lesson 16. Creating layout programmatically. LayoutParams			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/241-lesson-28-extras-passing-data-using-intent.html" itemprop="url">
			<span itemprop="name">
				Lesson 28. Extras - passing data using Intent			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/210-lesson-9-event-listeners-with-button-example.html" itemprop="url">
			<span itemprop="name">
				Lesson 9. Event listeners with Button example			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/232-lesson-24-activity-lifecycle-example-about-changing-states-with-two-activities.html" itemprop="url">
			<span itemprop="name">
				Lesson 24. Activity Lifecycle, example about changing states with two Activities			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/207-lesson-6-layout-types-key-differences-and-properties.html" itemprop="url">
			<span itemprop="name">
				Lesson 6. Layout types. Key differences and properties			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/224-lesson-18-changing-layoutparams-in-a-running-application.html" itemprop="url">
			<span itemprop="name">
				Lesson 18. Changing layoutParams in a running application			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/227-lesson-21-creating-and-starting-an-activity.html" itemprop="url">
			<span itemprop="name">
				Lesson 21. Creating and starting an Activity			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/203-lesson-5-layout-file-fo-ractivity-xml-representation-changing-screen-orientation.html" itemprop="url">
			<span itemprop="name">
				Lesson 5. Layout-file for Activity. XML Representation. Changing screen orientation			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/213-lesson-10-optimizing-event-listeners-implementation.html" itemprop="url">
			<span itemprop="name">
				Lesson 10. Optimizing event listeners implementation			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/201-lesson3-creating-avd-the-first-application-android-project-structure.html" itemprop="url">
			<span itemprop="name">
				Lesson 3. Creating AVD. The first application. Android project structure			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/200-lesson-2-installing-and-configuring-development-environment-eclipse-and-sdk-tools.html" itemprop="url">
			<span itemprop="name">
				Lesson 2. Installing and configuring development environment Eclipse and SDK Tools			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/218-lesson-14-menu-groups-order-menuinflater-and-xml-menu.html" itemprop="url">
			<span itemprop="name">
				Lesson 14. Menu, groups, order. MenuInflater and xml-menu			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/214-lesson-11-resvalues-folder-using-application-resources.html" itemprop="url">
			<span itemprop="name">
				Lesson 11. res/values folder. Using application resources			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/208-lesson-7-layout-parameters-for-view-elements.html" itemprop="url">
			<span itemprop="name">
				Lesson 7. Layout parameters for View-elements			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/229-lesson-22-intent-intent-filter-context-theory.html" itemprop="url">
			<span itemprop="name">
				Lesson 22. Intent, Intent Filter, Context - theory			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/219-lesson-15-context-menu.html" itemprop="url">
			<span itemprop="name">
				Lesson 15. Context menu			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/215-lesson-12-logs-and-toast-messages.html" itemprop="url">
			<span itemprop="name">
				Lesson 12. Logs and Toast messages.			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/199-lesson-1-introduction.html" itemprop="url">
			<span itemprop="name">
				Lesson 1. Introduction			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/202-lesson-4-layout-elements-and-their-properties.html" itemprop="url">
			<span itemprop="name">
				Lesson 4. Layout elements and their properties			</span>
		</a>
	</li>
</ul>
</div></div></div>
  </div>

</div>
<!-- //OFF-CANVAS SIDEBAR -->

		<!-- //OFF-CANVAS -->

	<div class="container">

		<!-- NAVBAR HEADER -->
		<div class="navbar-header">

			<!-- LOGO -->
			<div class="logo logo-text">
				<div class="logo-text">
					<a href="/" title="StartAndroid">
						
												
						<span>StartAndroid</span>
					</a>
				</div>
			</div>
			<!-- //LOGO -->

											<button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".t3-navbar-collapse">
					<i class="fa fa-bars"></i>
				</button>
			
	    
		</div>
		<!-- //NAVBAR HEADER -->

		<!-- NAVBAR MAIN -->
				<nav class="t3-navbar-collapse navbar-collapse collapse"></nav>
		
		<nav class="t3-navbar navbar-collapse collapse">
			<div class="t3-megamenu animate elastic" data-duration="400" data-responsive="true">
<ul itemscope itemtype="http://www.schema.org/SiteNavigationElement" class="nav navbar-nav level0">
<li itemprop='name' data-id="102" data-level="1">
<a itemprop='url' class="" href="/en/" data-target="#">Home </a>

</li>
<li itemprop='name' class="current active" data-id="106" data-level="1">
<a itemprop='url' class="" href="/en/lessons.html" data-target="#">Lessons </a>

</li>
<li itemprop='name' class="dropdown mega" data-id="135" data-level="1">
<a itemprop='url' class="customlight-background dropdown-toggle" href="#" data-target="#" data-toggle="dropdown">Courses<em class="caret"></em></a>

<div class="nav-child dropdown-menu mega-dropdown-menu"><div class="mega-dropdown-inner">
<div class="row">
<div class="col-xs-12 mega-col-nav" data-width="12"><div class="mega-inner">
<ul itemscope itemtype="http://www.schema.org/SiteNavigationElement" class="mega-nav level1">
<li itemprop='name' data-id="136" data-level="2">
<a itemprop='url' class="" href="/en/courses-en/dagger-2.html" data-target="#">Dagger 2 </a>

</li>
</ul>
</div></div>
</div>
</div></div>
</li>
<li itemprop='name' data-id="141" data-level="1">
<a itemprop='url' class="" href="/en/login.html" data-target="#">Log in </a>

</li>
</ul>
</div>

		</nav>
    <!-- //NAVBAR MAIN -->

	</div>
</header>
<!-- //MAIN NAVIGATION -->






  


  


	
<div id="t3-mainbody" class="container t3-mainbody">
	<div class="row">

		<!-- MAIN CONTENT -->
		<div id="t3-content" class="t3-content col-xs-12 col-sm-8 col-sm-push-4 col-md-9 col-md-push-3">
						<div class="page-header clearfix">
		<h1 class="page-title">Lessons</h1>
	</div>

<div class="item-page clearfix">


<!-- Article -->
<article>
	<meta itemprop="inLanguage" content="en-GB"/>
	<meta itemprop="url" content="/en/lessons/220-lesson-16-creating-layout-programmatically-layoutparams.html"/>

      
<header class="article-header clearfix">
	<h1 class="article-title" itemprop="headline">
					<a href="/en/lessons/220-lesson-16-creating-layout-programmatically-layoutparams.html" itemprop="url" title="Lesson 16. Creating layout programmatically. LayoutParams">
				Lesson 16. Creating layout programmatically. LayoutParams</a>
			</h1>

			</header>
    
    
  <!-- Aside -->
    <aside class="article-aside clearfix">
          	<dl class="article-info  muted">

		
			<dt class="article-info-term">
													Details							</dt>

			
			
			
										<dd class="published hasTooltip" title="Published: ">
				<i class="icon-calendar"></i>
				<time datetime="2011-09-15T15:27:56+03:00" itemprop="datePublished">
					15 September 2011				</time>
			</dd>					
					
			
						</dl>
        
      </aside>  
    <!-- //Aside -->

  
  
  
	
  
	
	<section class="article-content clearfix">
		<p>In this lesson we will:</p>
<p>- create layout programmatically, not using layout-files</p>
 
<p><i>Translated by Taras Leskiv (<a href="http://android-by-example.blogspot.com/" target="_blank" rel="noopener noreferrer">http://android-by-example.blogspot.com/</a>)</i> </p>
<p> </p>
<p>Up to this moment, we have been creating screens using<b> layout-files</b>. But we can do the same <b>programmatically</b>.</p>
<p>Let’s create a project:</p>
<p> </p>
<p><strong>Project name</strong>: P0161_DynamicLayout<br/> <strong>Build Target</strong>: Android 2.3.3<br/> <strong>Application name</strong>: DynamicLayout<br/> <strong>Package name</strong>: ru.startandroid.develop.dinamiclayout<br/> <strong>Create Activity</strong>: MainActivity</p>
<p>Open <b>MainActivity.java</b> and pay attention to the following line:</p>
<div class="java">
<pre class="brush:java">setContentView(R.layout.main);</pre>
</div>
<p> </p>
<p>Recall that in this line we specify that <b>Activity</b> will use <b>layout-file main.xml</b> as a screen. There is a different implementation of this method that takes as a parameter not a layout-file, but a <b>View-element</b> and makes it a root element. In layout-files a root element is usually <b>LinearLayout</b>, so we will use it too.</p>
<pre class="brush:java">    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        // creating LinearLayout
        LinearLayout linLayout = new LinearLayout(this);
        // specifying vertical orientation
        linLayout.setOrientation(LinearLayout.VERTICAL);
        // creating LayoutParams  
        LayoutParams linLayoutParam = new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT); 
        // set LinearLayout as a root element of the screen 
        setContentView(linLayout, linLayoutParam);
    }</pre>
<p> </p>
<p>Update the imports <b>CTRL+SHIFT+O</b>. Eclipse will ask which exactly <b>LayoutParams</b> we want to use. We will explore this in more detail. Let’s recall the theory about screens. A screen <a href="http://developer.android.com/guide/topics/ui/index.html#ViewHierarchy" target="_blank" rel="noopener noreferrer">consists</a> of the ViewGroup and View elements inside it.</p>
<p><img style="border: 1px solid black;" src="https://lh4.googleusercontent.com/-F91ssebAJlo/Tm-ZlYN7LzI/AAAAAAAAAUE/noad5YNMnds/s800/20110913_L0016_L_ViewGroups.png" alt="" width="312" height="211" border="0"/></p>
<p><b>ViewGroup</b> classes we are already familiar with - <b>LinearLayout</b>, <b>TableLayout</b>, <b>RelativeLayout </b>and others. Every of these ViewGroup classes <a href="http://developer.android.com/guide/topics/ui/declaring-layout.html#layout-params" target="_blank" rel="noopener noreferrer">has LayoutParams inner class</a>. The base class for these LayoutParams is <a href="http://developer.android.com/reference/android/view/ViewGroup.LayoutParams.html" target="_blank" rel="noopener noreferrer">ViewGroup.LayoutParams</a>.</p>
<p><b>ViewGroup.LayoutParams</b> has only two attributes: <b>height</b> and <b>width</b>. It’s subclass - <a href="http://developer.android.com/reference/android/view/ViewGroup.MarginLayoutParams.html" target="_blank" rel="noopener noreferrer">ViewGroup.MarginLayoutParams</a> inherits these two attributes and has four of its own: <b>bottomMargin</b>, <b>leftMargin</b>, <b>rightMargin</b>, <b>topMargin</b>. <a href="http://developer.android.com/reference/android/widget/LinearLayout.LayoutParams.html" target="_blank" rel="noopener noreferrer">LinearLayout.LayoutParams</a> class, which is by-turn a subclass of ViewGroup.MarginLayoutParams, inherits already 6 attributes from it and adds two of its own: <b>gravity</b> and <b>weight</b>.</p>
<p>So a <b>LinearLayout</b> object has inner class <b>LinearLayout.LayoutParams</b> with layout-attributes. And these attributes are distributed for all child Views and ViewGroups.</p>
<p><img style="border: 1px solid black;" src="https://lh4.googleusercontent.com/-xz2bRjH39vw/Tm-ZkRBvNMI/AAAAAAAAATw/ht4jwihDyJE/s800/20110913_L0016_L_LayoutParams.png" alt="" width="514" height="300" border="0"/></p>
<p> </p>
<p>So View, which is inside LinearLayout has one set of layout-parameters:</p>
<p><img style="border: 1px solid black;" src="https://lh4.googleusercontent.com/-ZPUWatnuYjY/Tm-ZkZZ7mQI/AAAAAAAAAT0/w9bZt3ar-MQ/s800/20110913_L0016_L_LinLayoutParams.jpg" alt="" width="313" height="282" border="0"/></p>
<p> </p>
<p>View from RelativeLayout - has different:</p>
<p><img style="border: 1px solid black;" src="https://lh5.googleusercontent.com/-t_UkqqNzvVs/Tm-Zkp1rrdI/AAAAAAAAAT4/3R1oFlO6ZyU/s800/20110913_L0016_L_RelLayoutParams.jpg" alt="" width="328" height="543" border="0"/></p>
<p> </p>
<p>There are some mutual elements as these ViewGroups have the same parents.</p>
<p>Let’s return to Eclipse, it still awaits our choice. Let’s use ViewGroup.LayoutParams base class</p>
<p><img src="https://lh3.googleusercontent.com/-n2e7EEZK-94/Tm-ZkUHe6kI/AAAAAAAAATs/iYryeP2PpLk/s800/20110913_L0016_L_LayoutParamsChoice.jpg" alt="" width="482" height="437" border="0"/></p>
<p> </p>
<p>Let’s look throught the code. We create <b>LinearLayout</b> and specify <b>vertical</b> orientation. Then we create <b>LayoutParams</b>. The constructor takes two parameters: <b>width</b> and <b>height</b>. We set both as <b>MATCH_PARENT</b>. After this, <a href="http://developer.android.com/reference/android/app/Activity.html#setContentView(android.view.View, android.view.ViewGroup.LayoutParams)" target="_blank" rel="noopener noreferrer">setContentView</a> method is invoked. <b>LinearLayout</b> and <b>LayoutParams</b> are passed to it as parameters. This means that <b>LinearLayout</b> with layout-attributes from LayoutParams will be the <b>root</b> element.</p>
<p>If we run the application now we will see nothing, as LinearLayout is transparent. Let’s start adding View-components to our LinearLayout.</p>
<pre class="brush:java">        LayoutParams lpView = new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
        
        TextView tv = new TextView(this);
        tv.setText("TextView");
        tv.setLayoutParams(lpView);
        linLayout.addView(tv);
        
        Button btn = new Button(this);
        btn.setText("Button");
        linLayout.addView(btn, lpView);</pre>
<p> </p>
<p>We again create <b>LayoutParams</b> object with <b>width</b> = <b>wrap_content</b> and <b>height</b> = <b>wrap_content</b> attributes. Now if we assign this object to one of the Views, this <b>View</b> will have <b>width</b> and <b>height</b> defined by its <b>content</b>.</p>
<p>After this we create a <b>TextView</b>, update its text, set it previously created LayoutParams object and add it to LinearLayout using <a href="http://developer.android.com/reference/android/view/ViewGroup.html#addView(android.view.View)" target="_blank" rel="noopener noreferrer">addView(View child)</a> method.</p>
<p>The same with the <b>Button</b> - create, update text, and then use another implementation of <a href="http://developer.android.com/reference/android/view/ViewGroup.html#addView(android.view.View, android.view.ViewGroup.LayoutParams)" target="_blank" rel="noopener noreferrer">addView(View child, ViewGroup.LayoutParams params)</a> method, which simultaneously adds the <b>Button</b> to the <b>LinearLayout</b> and sets the Button the specified <b>LayoutParams</b>. Result will be the same as with the TextView, but instead of two lines of code we use only one.</p>
<p>Note that for <b>two View objects</b> I’ve used <b>one LayoutParams object</b> - lpView. And if I now change the properties of this objects, both views will change correspondingly.</p>
<p>Save and launch the application. We can see that the components have appeared on the screen. And we can see that their height and width is defined by their content (wrap_content).</p>
<p><img src="https://lh5.googleusercontent.com/-zvNtPE8WS7o/Tm-ZkxSyJFI/AAAAAAAAAT8/65P1OwPHqvg/s640/20110913_L0016_L_Screen1.jpg" alt="" width="640" height="454" border="0"/></p>
<p> </p>
<p><b>lpView</b> object has a basic type <b>android.view.ViewGroup.LayoutParams</b>. It means it will allow to configure only width and height. But for a <b>View</b> in the <b>LinearLayout</b>, for example, left margin or aligning by right edge are available. And if we want to apply them, we need to use <b>LinearLayout.LayoutParams</b>:</p>
<pre class="brush:java">        LinearLayout.LayoutParams leftMarginParams = new LinearLayout.LayoutParams(
                LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
        leftMarginParams.leftMargin = 50;
        
        Button btn1 = new Button(this);
        btn1.setText("Button1");
        linLayout.addView(btn1, leftMarginParams);</pre>
<p>Have a look at the code. We create an object of <b>LinearLayout.LayoutParams</b> type using the same constructor as for common LayoutParams, specifying <b>width</b> and <b>height</b>. Then we specify a <b>left margin</b> = 50. Margin here is specified in <b>pixels</b>. The algorithm is the same further: create an object, update the text and add it to the LinearLayout with setting LayoutParams.</p>
<p>Analogically, add the component with alignment:</p>
<div class="java">
<pre class="brush:java">        LinearLayout.LayoutParams rightGravityParams = new LinearLayout.LayoutParams(
                LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
        rightGravityParams.gravity = Gravity.RIGHT;
        
        Button btn2 = new Button(this);
        btn2.setText("Button2");
        linLayout.addView(btn2, rightGravityParams);</pre>
</div>
<p> </p>
<p>Save and launch. Button1 has a margin of 50px. And button2 is aligned by its right edge:</p>
<p><img src="https://lh3.googleusercontent.com/-lSvGCW3-e_E/Tm-ZlMnnrjI/AAAAAAAAAUA/N5iTXMiYLqU/s640/20110913_L0016_L_Screen2.jpg" alt="" width="640" height="454" border="0"/></p>
<p> </p>
<p>Most likely, this topic will not be absolutely clear at first. That’s why in the following two lessons we will revise the knowledge and will have some practice with adding elements on the screen and configuring them.</p>
<p> </p>
<p>The complete lesson code:</p>
<pre class="brush:java">public class MainActivity extends Activity {
    /** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        // creating LinearLayout
        LinearLayout linLayout = new LinearLayout(this);
        // specifying vertical orientation
        linLayout.setOrientation(LinearLayout.VERTICAL);
        // creating LayoutParams  
        LayoutParams linLayoutParam = new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT); 
        // set LinearLayout as a root element of the screen 
        setContentView(linLayout, linLayoutParam);
        
        LayoutParams lpView = new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
        
        TextView tv = new TextView(this);
        tv.setText("TextView");
        tv.setLayoutParams(lpView);
        linLayout.addView(tv);
        
        Button btn = new Button(this);
        btn.setText("Button");
        linLayout.addView(btn, lpView);

        
        LinearLayout.LayoutParams leftMarginParams = new LinearLayout.LayoutParams(
                LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
        leftMarginParams.leftMargin = 50;
        
        Button btn1 = new Button(this);
        btn1.setText("Button1");
        linLayout.addView(btn1, leftMarginParams);

        
        LinearLayout.LayoutParams rightGravityParams = new LinearLayout.LayoutParams(
                LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
        rightGravityParams.gravity = Gravity.RIGHT;
        
        Button btn2 = new Button(this);
        btn2.setText("Button2");
        linLayout.addView(btn2, rightGravityParams);
    }
}</pre>
<p> </p>
<p>In the next lesson we will: </p>
<p>- add components on the screen while application is running.</p>
<p> </p><div><hr>
<!-- START: Modules Anywhere -->

<div class="custom">
	<p>Присоединяйтесь к нам в <b>Telegram</b>:</p>
<p>- в канале <a href="https://t.me/startandroid" target="_blank" rel="alternate noopener noreferrer">StartAndroid</a> публикуются ссылки на новые статьи с сайта startandroid.ru и интересные материалы с хабра, medium.com и т.п.</p>
<p>- в чатах решаем возникающие вопросы и проблемы по различным темам: <a href="https://t.me/startandroidchat" target="_blank" rel="alternate noopener noreferrer">Android</a>, <a href="https://t.me/kotlinchat" target="_blank" rel="alternate noopener noreferrer">Kotlin</a>, <a href="https://t.me/rxjavachat" target="_blank" rel="alternate noopener noreferrer">RxJava</a>, <a href="https://t.me/daggerchat" target="_blank" rel="alternate noopener noreferrer">Dagger</a>, <a href="https://t.me/androidtestingchat" target="_blank" rel="alternate noopener noreferrer">Тестирование</a> </p>
<p>- ну и если просто хочется поговорить с коллегами по разработке, то есть чат <a href="https://t.me/startandroidflood" target="_blank" rel="noopener noreferrer">Флудильня</a></p>
<p>- новый чат <a href="https://t.me/android_performance_chat" target="_blank" rel="noopener noreferrer">Performance</a> для обсуждения проблем производительности и для ваших пожеланий по содержанию курса по этой теме </p></div>
<!-- END: Modules Anywhere -->
<hr>
<br>

</div>	</section>
  
  <!-- footer -->
    <!-- //footer -->

			<hr class="divider-vertical"/><ul class="pager pagenav">
	<li class="previous">
		<a class="hasTooltip" title="Lesson 15. Context menu" aria-label="Previous article: Lesson 15. Context menu" href="/en/lessons/219-lesson-15-context-menu.html" rel="prev">
			<span class="icon-chevron-left" aria-hidden="true"></span> <span aria-hidden="true">Prev</span>		</a>
	</li>
	<li class="next">
		<a class="hasTooltip" title="Lesson 17. Creating View-components in a running application" aria-label="Next article: Lesson 17. Creating View-components in a running application" href="/en/lessons/222-lesson-17-creating-view-components-in-a-running-application.html" rel="next">
			<span aria-hidden="true">Next</span> <span class="icon-chevron-right" aria-hidden="true"></span>		</a>
	</li>
</ul>
	
	
	</article>
<!-- //Article -->


</div>
		</div>
		<!-- //MAIN CONTENT -->

		<!-- SIDEBAR LEFT -->
		<div class="t3-sidebar t3-sidebar-left col-xs-12 col-sm-4 col-sm-pull-8 col-md-3 col-md-pull-9 ">
			<div class="t3-module module " id="Mod87"><div class="module-inner"><div class="module-ct"><div class="mod-languages">
	<div class="pretext"><p><h1>Language</h1></p></div>

	<ul class="lang-inline" dir="ltr">
						<li>
			<a href="/ru/uroki/vse-uroki-spiskom/49-16-layoutparams.html">
												<img src="/media/mod_languages/images/ru.gif.pagespeed.ce.bzLHrnbLL7.gif" alt="Русский" title="Русский"/>										</a>
			</li>
											<li class="lang-active">
			<a href="https://startandroid.ru/en/lessons/220-lesson-16-creating-layout-programmatically-layoutparams.html">
												<img src="/media/mod_languages/images/xen.gif.pagespeed.ic.a_9qHVLn30.png" alt="English (UK)" title="English (UK)"/>										</a>
			</li>
				</ul>

</div>
</div></div></div>
		</div>
		<!-- //SIDEBAR LEFT -->

	</div>
</div> 


  


  


	
<!-- BACK TOP TOP BUTTON -->
<div id="back-to-top" data-spy="affix" data-offset-top="300" class="back-to-top hidden-xs hidden-sm affix-top">
  <button class="btn btn-primary" title="Back to Top"><i class="fa fa-caret-up"></i></button>
</div>
<script type="text/javascript">(function($){$('#back-to-top').on('click',function(){$("html, body").animate({scrollTop:0},500);return false;});$(window).load(function(){if((parseInt($(window).height())*2)>(parseInt($(document).height()))){$('#back-to-top').hide();}});})(jQuery);</script>
<!-- BACK TO TOP BUTTON -->

<!-- FOOTER -->
<footer id="t3-footer" class="wrap t3-footer">

	
	<section class="t3-copyright">
		<div class="container">
			<div class="row">
				<div class="col-md-8 copyright ">
					

<div class="custom">
	<p>© Start Android, 2011-2020. Все права защищены, копирование материалов возможно только с разрешения автора </p>
<!-- START: Modules Anywhere -->

<div class="custom">
	<p>При возникновении каких-либо вопросов, используйте <a href="http://startandroid.ru/ru/about/cntct5.html" target="blank">форму обратной связи</a> </p></div>
<!-- END: Modules Anywhere -->
<p> </p>
<p> </p></div>

          <small>
            <a href="http://twitter.github.io/bootstrap/" title="Bootstrap by Twitter" target="_blank">Bootstrap</a> is a front-end framework of Twitter, Inc. Code licensed under <a href="https://github.com/twbs/bootstrap/blob/master/LICENSE" title="MIT License" target="_blank">MIT License.</a>
          </small>
          <small>
            <a href="http://fortawesome.github.io/Font-Awesome/" target="_blank">Font Awesome</a> font licensed under <a href="http://scripts.sil.org/OFL">SIL OFL 1.1</a>.
          </small>
				</div>
									<div class="col-md-4 poweredby text-hide">
						<a class="t3-logo t3-logo-color" href="http://t3-framework.org" title="Powered By T3 Framework" target="_blank" rel="nofollow">Powered by <strong>T3 Framework</strong></a>
					</div>
							</div>
		</div>
	</section>

</footer>
<!-- //FOOTER -->

</div>
<script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');ga('create','UA-19388196-4','auto');ga('send','pageview');</script>
</body>
</html>
