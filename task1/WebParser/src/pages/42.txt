
<!DOCTYPE html>
<html lang="ru-ru" dir="ltr" class='com_content view-article itemid-106 j39 mm-hover '>
<head>
<link href="https://www.startandroid.ru/templates/mycustomcss.css" rel="stylesheet" type="text/css">
	<base href="https://startandroid.ru/en/lessons/222-lesson-17-creating-view-components-in-a-running-application.html"/>
	<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
	<meta name="keywords" content="LayoutParams, RadioGroup, RadioButton, OnClickListener, onClick, getCheckedRadioButtonId, removeAllViews"/>
	<meta name="rights" content="StartAndroid"/>
	<meta name="og:title" content="Lesson 17. Creating View-components in a running application"/>
	<meta name="og:type" content="article"/>
	<meta name="og:image" content="https://startandroid.ru/images/stories/lessons/L0017/L0017_010.png"/>
	<meta name="og:url" content="https://startandroid.ru/en/lessons/222-lesson-17-creating-view-components-in-a-running-application.html"/>
	<meta name="og:site_name" content="StartAndroid"/>
	<meta name="og:description" content="How to add view programmatically in Android."/>
	<meta name="author" content="Dmitry Vinogradov"/>
	<meta name="description" content="How to add view programmatically in Android."/>
	<meta name="generator" content="Joomla! - Open Source Content Management"/>
	<title>Lesson 17. Creating View-components in a running application</title>
	<link href="https://startandroid.ru/ru/uroki/vse-uroki-spiskom/50-urok-17-sozdanie-view-komponent-v-rabochem-prilozhenii.html" rel="alternate" hreflang="ru-RU"/>
	<link href="https://startandroid.ru/en/lessons/222-lesson-17-creating-view-components-in-a-running-application.html" rel="alternate" hreflang="en-GB"/>
	<link href="/templates/purity_iii/favicon.ico" rel="shortcut icon" type="image/vnd.microsoft.icon"/>
	<link href="/A.templates,,_purity_iii,,_local,,_css,,_bootstrap.css+components,,_com_jcomments,,_tpl,,_default,,_style.css,,qv==3002+plugins,,_content,,_hs_highlighter,,_lib,,_styles,,_shCore.css+plugins,,_content,,_hs_highlighter,,_lib,,_styles,,_shThemeDefault.css,Mcc.g9s2Fj-V5G.css.pagespeed.cf.C1U8Cas-X8.css" rel="stylesheet" type="text/css"/>
	
	
	
	<link href="http://www.startandroid.ru/plugins/content/jfusion/discussbot/tmpl/default/jfusion.css" rel="stylesheet" type="text/css"/>
	<link href="/A.templates,,_system,,_css,,_system.css+templates,,_purity_iii,,_local,,_css,,_template.css+templates,,_purity_iii,,_local,,_css,,_megamenu.css+templates,,_purity_iii,,_local,,_css,,_off-canvas.css+templates,,_purity_iii,,_fonts,,_font-awesome,,_css,,_font-awesome.min.css+templates,,_purity_iii,,_local,,_css,,_layouts,,_corporate.css+plugins,,_system,,_mediabox_ck,,_assets,,_mediaboxck.css+media,,_mod_languages,,_css,,_template.css,,q092552cf642fe2bdd8a0d9879112de23,Mcc.8bkeEgaG8c.css.pagespeed.cf.NQwL-2HVTk.css" rel="stylesheet" type="text/css"/>
	
	
	
	
	
	
	
	<style type="text/css">#mbCenter,#mbToolbar{background-color:#1a1a1a;-webkit-border-radius:10px;-khtml-border-radius:10px;-moz-border-radius:10px;border-radius:10px;-webkit-box-shadow:0 5px 20px rgba(0,0,0,.50);-khtml-box-shadow:0 5px 20px rgba(0,0,0,.50);-moz-box-shadow:0 5px 20px rgba(0,0,0,.50);box-shadow:0 5px 20px rgba(0,0,0,.50);-ms-filter:"progid:DXImageTransform.Microsoft.Shadow(Strength=5, Direction=180, Color='#000000')";filter: progid:DXImageTransform.Microsoft.Shadow(Strength=5, Direction=180, Color='#000000')}#mbOverlay{background-color:#000}#mbCenter.mbLoading{background-color:#1a1a1a}#mbBottom{color:#999}#mbTitle,#mbPrevLink,#mbNextLink,#mbCloseLink,#mbPlayLink,#mbPauseLink,#mbZoomMinus,#mbZoomValue,#mbZoomPlus{color:#fff}</style>
	<script type="application/json" class="joomla-script-options new">{"csrf.token":"ed37a4ab8f272e400044c1ea8adb7ccf","system.paths":{"root":"","base":""},"joomla.jtext":{"BUTTON_CANCEL":"Cancel","BUTTON_INITIATE":"Initiate Discussion","BUTTON_PUBLISH_NEW_DISCUSSION":"Publish New Discussion","BUTTON_REPUBLISH_DISCUSSION":"Republish Discussion","BUTTON_UNPUBLISH_DISCUSSION":"Unpublish Discussion","CONFIRM_THREAD_CREATION":"Initiate the discussion bot for this article? A thread will automatically be created in the forum and associated with this article.","CONFIRM_UNPUBLISH_DISCUSSION":"Do you want to unpublish this discussion? Note that this will not manipulate the forum in any way. It will simply remove the discussion from the article.","CONFIRM_PUBLISH_DISCUSSION":"This article has been previously initiated. Click 'Republish Discussion' to associate the article with the existing discussion (this can be undone by simply clicking 'Uninitiate Discussion' after initializing). Or click 'Publish New Discussion' to create a new thread and associate the article with the new discussion.","DISCUSSBOT_ERROR":"Error","HIDE_REPLIES":"Hide Replies","JYES":"Yes","SHOW_REPLIES":"Show Replies","SUBMITTING_QUICK_REPLY":"Submitting quick reply..."}}</script>
	<script src="/media/system/js/mootools-core.js,q092552cf642fe2bdd8a0d9879112de23.pagespeed.jm.ywlvbuicbl.js" type="text/javascript"></script>
	<script src="/media/system/js/core.js,q092552cf642fe2bdd8a0d9879112de23.pagespeed.ce.I4kCTD093I.js" type="text/javascript"></script>
	<script src="/media/system/js/mootools-more.js,q092552cf642fe2bdd8a0d9879112de23.pagespeed.jm.-6O1zP2hFm.js" type="text/javascript"></script>
	<script src="/plugins/content/hs_highlighter/lib/scripts/shCore.js+shAutoloader.js.pagespeed.jc.WXf0A72UUc.js"></script><script>eval(mod_pagespeed_su9IpL5SVr);</script>
	<script>eval(mod_pagespeed_WeiLV__hGm);</script>
	<script src="/media/jui/js/jquery.min.js,q092552cf642fe2bdd8a0d9879112de23.pagespeed.jm.Esjhv-eXHl.js" type="text/javascript"></script>
	<script src="/media,_jui,_js,_jquery-noconflict.js,q092552cf642fe2bdd8a0d9879112de23+media,_jui,_js,_jquery-migrate.min.js,q092552cf642fe2bdd8a0d9879112de23+plugins,_system,_t3,_base-bs3,_bootstrap,_js,_bootstrap.js,q092552cf642fe2bdd8a0d9879112de23+media,_system,_js,_caption.js,q092552cf642fe2bdd8a0d9879112de23+plugins,_system,_t3,_base-bs3,_js,_jquery.tap.min.js.pagespeed.jc.Zgymc-Cw8E.js"></script><script>eval(mod_pagespeed_mx8RjjKG3V);</script>
	<script>eval(mod_pagespeed_EEHT5I5lbD);</script>
	<script src="http://www.startandroid.ru/plugins/content/jfusion/discussbot/tmpl/default/jfusion.js" type="text/javascript"></script>
	<script>eval(mod_pagespeed_y3OBNTle2M);</script>
	<script>eval(mod_pagespeed_UCstg9erlS);</script>
	<script>eval(mod_pagespeed_1XadJYvQRa);</script>
	<script src="/plugins,_system,_t3,_base-bs3,_js,_off-canvas.js+plugins,_system,_t3,_base-bs3,_js,_script.js+plugins,_system,_t3,_base-bs3,_js,_menu.js+templates,_purity_iii,_js,_script.js+plugins,_system,_t3,_base-bs3,_js,_nav-collapse.js+plugins,_system,_mediabox_ck,_assets,_mediaboxck.min.js,qver==2.4.0.pagespeed.jc.tzMQyIb0Wy.js"></script><script>eval(mod_pagespeed_r6BAo9HvrJ);</script>
	<script>eval(mod_pagespeed_$6DR3H2ba0);</script>
	<script>eval(mod_pagespeed_oaBYG6qGe9);</script>
	<script>eval(mod_pagespeed_AmCkxaCr$c);</script>
	<script>eval(mod_pagespeed_ZlfQYd6O1_);</script>
	<script>eval(mod_pagespeed_rDcvdPCnuH);</script>
	<script type="text/javascript">window.addEvent('load',function(){var siteurl='https://startandroid.ru/';function path(){var args=arguments,result=[];for(var i=0;i<args.length;i++){result.push(args[i].replace('@',[siteurl,'plugins/content/hs_highlighter/lib/scripts/'].join('')));}return result;};SyntaxHighlighter.autoloader.apply(null,path('applescript            @shBrushAppleScript.js','actionscript3 as3      @shBrushAS3.js','bash shell             @shBrushBash.js','coldfusion cf          @shBrushColdFusion.js','cpp c                  @shBrushCpp.js','c# c-sharp csharp      @shBrushCSharp.js','css                    @shBrushCss.js','delphi pascal          @shBrushDelphi.js','diff patch pas         @shBrushDiff.js','erl erlang             @shBrushErlang.js','groovy                 @shBrushGroovy.js','java                   @shBrushJava.js','jfx javafx             @shBrushJavaFX.js','js jscript javascript  @shBrushJScript.js','perl pl                @shBrushPerl.js','php                    @shBrushPhp.js','text plain             @shBrushPlain.js','py python              @shBrushPython.js','ruby rails ror rb      @shBrushRuby.js','sass scss              @shBrushSass.js','scala                  @shBrushScala.js','sql                    @shBrushSql.js','vb vbnet               @shBrushVb.js','xml xhtml xslt html    @shBrushXml.js'));SyntaxHighlighter.defaults['auto-links']=false;SyntaxHighlighter.defaults['toolbar']=false;;SyntaxHighlighter.all();});JFusion.view='article';JFusion.enablePagination=1;JFusion.enableJumpto=0;JFusion.articelUrl[222]='/en/lessons/222-lesson-17-creating-view-components-in-a-running-application.html';jQuery(function($){initTooltips();$("body").on("subform-row-add",initTooltips);function initTooltips(event,container){container=container||document;$(container).find(".hasTooltip").tooltip({"html":true,"container":"body"});}});jQuery(window).on('load',function(){new JCaption('img.caption');});Mediabox.scanPage=function(){var links=jQuery('a').filter(function(i){if(jQuery(this).attr('rel')&&jQuery(this).data('mediaboxck_done')!='1'){var patt=new RegExp(/^lightbox/i);return patt.test(jQuery(this).attr('rel'));}});if(!links.length)return false;new Mediaboxck(links,{overlayOpacity:0.7,resizeOpening:1,resizeDuration:240,initialWidth:320,initialHeight:180,fullWidth:'0',defaultWidth:'640',defaultHeight:'360',showCaption:1,showCounter:1,loop:0,isMobileEnable:1,isMobile:false,mobileResolution:'640',attribType:'rel',showToolbar:'0',diapoTime:'3000',diapoAutoplay:'0',toolbarSize:'normal',medialoop:false,showZoom:0,counterText:'({x} of {y})',playerpath:'/plugins/system/mediabox_ck/assets/NonverBlaster.swf'},null,function(curlink,el){var rel0=curlink.rel.replace(/[[]|]/gi," ");var relsize=rel0.split(" ");return(curlink==el)||((curlink.rel.length>8)&&el.rel.match(relsize[1]));});};jQuery(document).ready(function(){Mediabox.scanPage();});</script>
	<link href="https://startandroid.ru/ru/uroki/vse-uroki-spiskom/50-urok-17-sozdanie-view-komponent-v-rabochem-prilozhenii.html" rel="alternate" hreflang="x-default"/>

	
<!-- META FOR IOS & HANDHELD -->
	<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"/>
	<style type="text/stylesheet">@-webkit-viewport   { width: device-width; }@-moz-viewport      { width: device-width; }@-ms-viewport       { width: device-width; }@-o-viewport        { width: device-width; }@viewport           { width: device-width; }</style>
	<script type="text/javascript">if(navigator.userAgent.match(/IEMobile\/10\.0/)){var msViewportStyle=document.createElement("style");msViewportStyle.appendChild(document.createTextNode("@-ms-viewport{width:auto!important}"));document.getElementsByTagName("head")[0].appendChild(msViewportStyle);}</script>
<meta name="HandheldFriendly" content="true"/>
<meta name="apple-mobile-web-app-capable" content="YES"/>
<!-- //META FOR IOS & HANDHELD -->




<!-- Le HTML5 shim and media query for IE8 support -->
<!--[if lt IE 9]>
<script src="//html5shim.googlecode.com/svn/trunk/html5.js"></script>
<script type="text/javascript" src="/plugins/system/t3/base-bs3/js/respond.min.js"></script>
<![endif]-->

<!-- You can add Google Analytics here or use T3 Injection feature -->

<!--[if lt IE 9]>
<link rel="stylesheet" href="/templates/purity_iii/css/ie8.css" type="text/css" />
<![endif]-->
	</head>

<body>

<div class="t3-wrapper corporate"> <!-- Need this wrapper for off-canvas menu. Remove if you don't use of-canvas -->

	
<!-- MAIN NAVIGATION -->
<header id="t3-mainnav" class="wrap navbar navbar-default navbar-fixed-top t3-mainnav">

	<!-- OFF-CANVAS -->
			
<button class="btn btn-default off-canvas-toggle " type="button" data-pos="left" data-nav="#t3-off-canvas" data-effect="off-canvas-effect-4">
  <i class="fa fa-bars"></i>
</button>

<!-- OFF-CANVAS SIDEBAR -->
<div id="t3-off-canvas" class="t3-off-canvas ">

  <div class="t3-off-canvas-header">
    <h2 class="t3-off-canvas-header-title">Sidebar</h2>
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
  </div>

  <div class="t3-off-canvas-body">
    <div class="t3-module module " id="Mod100"><div class="module-inner"><h3 class="module-title "><span>Most read</span></h3><div class="module-ct"><ul class="mostread mod-list">
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/225-lesson-19-creating-a-simple-calculator.html" itemprop="url">
			<span itemprop="name">
				Lesson 19. Creating a simple calculator			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/220-lesson-16-creating-layout-programmatically-layoutparams.html" itemprop="url">
			<span itemprop="name">
				Lesson 16. Creating layout programmatically. LayoutParams			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/241-lesson-28-extras-passing-data-using-intent.html" itemprop="url">
			<span itemprop="name">
				Lesson 28. Extras - passing data using Intent			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/210-lesson-9-event-listeners-with-button-example.html" itemprop="url">
			<span itemprop="name">
				Lesson 9. Event listeners with Button example			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/232-lesson-24-activity-lifecycle-example-about-changing-states-with-two-activities.html" itemprop="url">
			<span itemprop="name">
				Lesson 24. Activity Lifecycle, example about changing states with two Activities			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/207-lesson-6-layout-types-key-differences-and-properties.html" itemprop="url">
			<span itemprop="name">
				Lesson 6. Layout types. Key differences and properties			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/224-lesson-18-changing-layoutparams-in-a-running-application.html" itemprop="url">
			<span itemprop="name">
				Lesson 18. Changing layoutParams in a running application			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/227-lesson-21-creating-and-starting-an-activity.html" itemprop="url">
			<span itemprop="name">
				Lesson 21. Creating and starting an Activity			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/203-lesson-5-layout-file-fo-ractivity-xml-representation-changing-screen-orientation.html" itemprop="url">
			<span itemprop="name">
				Lesson 5. Layout-file for Activity. XML Representation. Changing screen orientation			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/213-lesson-10-optimizing-event-listeners-implementation.html" itemprop="url">
			<span itemprop="name">
				Lesson 10. Optimizing event listeners implementation			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/201-lesson3-creating-avd-the-first-application-android-project-structure.html" itemprop="url">
			<span itemprop="name">
				Lesson 3. Creating AVD. The first application. Android project structure			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/200-lesson-2-installing-and-configuring-development-environment-eclipse-and-sdk-tools.html" itemprop="url">
			<span itemprop="name">
				Lesson 2. Installing and configuring development environment Eclipse and SDK Tools			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/218-lesson-14-menu-groups-order-menuinflater-and-xml-menu.html" itemprop="url">
			<span itemprop="name">
				Lesson 14. Menu, groups, order. MenuInflater and xml-menu			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/214-lesson-11-resvalues-folder-using-application-resources.html" itemprop="url">
			<span itemprop="name">
				Lesson 11. res/values folder. Using application resources			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/208-lesson-7-layout-parameters-for-view-elements.html" itemprop="url">
			<span itemprop="name">
				Lesson 7. Layout parameters for View-elements			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/229-lesson-22-intent-intent-filter-context-theory.html" itemprop="url">
			<span itemprop="name">
				Lesson 22. Intent, Intent Filter, Context - theory			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/219-lesson-15-context-menu.html" itemprop="url">
			<span itemprop="name">
				Lesson 15. Context menu			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/215-lesson-12-logs-and-toast-messages.html" itemprop="url">
			<span itemprop="name">
				Lesson 12. Logs and Toast messages.			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/199-lesson-1-introduction.html" itemprop="url">
			<span itemprop="name">
				Lesson 1. Introduction			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/en/lessons/202-lesson-4-layout-elements-and-their-properties.html" itemprop="url">
			<span itemprop="name">
				Lesson 4. Layout elements and their properties			</span>
		</a>
	</li>
</ul>
</div></div></div>
  </div>

</div>
<!-- //OFF-CANVAS SIDEBAR -->

		<!-- //OFF-CANVAS -->

	<div class="container">

		<!-- NAVBAR HEADER -->
		<div class="navbar-header">

			<!-- LOGO -->
			<div class="logo logo-text">
				<div class="logo-text">
					<a href="/" title="StartAndroid">
						
												
						<span>StartAndroid</span>
					</a>
				</div>
			</div>
			<!-- //LOGO -->

											<button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".t3-navbar-collapse">
					<i class="fa fa-bars"></i>
				</button>
			
	    
		</div>
		<!-- //NAVBAR HEADER -->

		<!-- NAVBAR MAIN -->
				<nav class="t3-navbar-collapse navbar-collapse collapse"></nav>
		
		<nav class="t3-navbar navbar-collapse collapse">
			<div class="t3-megamenu animate elastic" data-duration="400" data-responsive="true">
<ul itemscope itemtype="http://www.schema.org/SiteNavigationElement" class="nav navbar-nav level0">
<li itemprop='name' data-id="102" data-level="1">
<a itemprop='url' class="" href="/en/" data-target="#">Home </a>

</li>
<li itemprop='name' class="current active" data-id="106" data-level="1">
<a itemprop='url' class="" href="/en/lessons.html" data-target="#">Lessons </a>

</li>
<li itemprop='name' class="dropdown mega" data-id="135" data-level="1">
<a itemprop='url' class="customlight-background dropdown-toggle" href="#" data-target="#" data-toggle="dropdown">Courses<em class="caret"></em></a>

<div class="nav-child dropdown-menu mega-dropdown-menu"><div class="mega-dropdown-inner">
<div class="row">
<div class="col-xs-12 mega-col-nav" data-width="12"><div class="mega-inner">
<ul itemscope itemtype="http://www.schema.org/SiteNavigationElement" class="mega-nav level1">
<li itemprop='name' data-id="136" data-level="2">
<a itemprop='url' class="" href="/en/courses-en/dagger-2.html" data-target="#">Dagger 2 </a>

</li>
</ul>
</div></div>
</div>
</div></div>
</li>
<li itemprop='name' data-id="141" data-level="1">
<a itemprop='url' class="" href="/en/login.html" data-target="#">Log in </a>

</li>
</ul>
</div>

		</nav>
    <!-- //NAVBAR MAIN -->

	</div>
</header>
<!-- //MAIN NAVIGATION -->






  


  


	
<div id="t3-mainbody" class="container t3-mainbody">
	<div class="row">

		<!-- MAIN CONTENT -->
		<div id="t3-content" class="t3-content col-xs-12 col-sm-8 col-sm-push-4 col-md-9 col-md-push-3">
						<div class="page-header clearfix">
		<h1 class="page-title">Lessons</h1>
	</div>

<div class="item-page clearfix">


<!-- Article -->
<article>
	<meta itemprop="inLanguage" content="en-GB"/>
	<meta itemprop="url" content="/en/lessons/222-lesson-17-creating-view-components-in-a-running-application.html"/>

      
<header class="article-header clearfix">
	<h1 class="article-title" itemprop="headline">
					<a href="/en/lessons/222-lesson-17-creating-view-components-in-a-running-application.html" itemprop="url" title="Lesson 17. Creating View-components in a running application">
				Lesson 17. Creating View-components in a running application</a>
			</h1>

			</header>
    
    
  <!-- Aside -->
    <aside class="article-aside clearfix">
          	<dl class="article-info  muted">

		
			<dt class="article-info-term">
													Details							</dt>

			
			
			
										<dd class="published hasTooltip" title="Published: ">
				<i class="icon-calendar"></i>
				<time datetime="2011-09-19T15:29:05+03:00" itemprop="datePublished">
					19 September 2011				</time>
			</dd>					
					
			
						</dl>
        
      </aside>  
    <!-- //Aside -->

  
  
  
	
  
	
	<section class="article-content clearfix">
		<p>In this lesson we will:</p>
<p>- add components to the screen while application is running</p>
 
<p><i>Translated by Taras Leskiv (<a href="http://android-by-example.blogspot.com/" target="_blank" rel="noopener noreferrer">http://android-by-example.blogspot.com/</a>)</i></p>
<p> </p>
<p>In the previous lesson we were creating components in Activity.onCreate method, that is when creating the application. In this lesson we will create components while the application is running. We will be creating Buttons as they are displayed the most obviously. We will specify the text that will be displayed on the button and its alignment: left, center or right. We will also consider the deletion of the created components.</p>
<p> </p>
<p>Let’s create a project:</p>
<p><strong>Project name</strong>: P0171_DynamicLayout2<br/><strong>Build Target</strong>: Android 2.3.3<br/><strong>Application name</strong>: DynamicLayout2<br/><strong>Package name</strong>: ru.startandroid.develop.dynamiclayout2<br/><strong>Create Activity</strong>: MainActivity</p>
<p> </p>
<p>Create a screen that will help us creating View-components. Open <b>main.xml</b> and write the following there:</p>
<pre class="brush:xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout
	xmlns:android="http://schemas.android.com/apk/res/android"
	android:orientation="vertical"
	android:layout_width="fill_parent"
	android:layout_height="fill_parent"&gt;
	&lt;RadioGroup
		android:layout_height="wrap_content"
		android:layout_width="match_parent"
		android:orientation="horizontal"
		android:id="@+id/rgGravity"&gt;
		&lt;RadioButton
			android:layout_height="wrap_content"
			android:layout_width="wrap_content"
			android:checked="true"
			android:text="Left"
			android:id="@+id/rbLeft"&gt;
		&lt;/RadioButton&gt;
		&lt;RadioButton
			android:layout_height="wrap_content"
			android:layout_width="wrap_content"
			android:text="Center"
			android:id="@+id/rbCenter"&gt;
		&lt;/RadioButton&gt;
		&lt;RadioButton
			android:layout_height="wrap_content"
			android:layout_width="wrap_content"
			android:text="Right"
			android:id="@+id/rbRight"&gt;
		&lt;/RadioButton&gt;
	&lt;/RadioGroup&gt;
	&lt;LinearLayout
		android:id="@+id/linearLayout1"
		android:layout_width="match_parent"
		android:orientation="horizontal"
		android:layout_height="wrap_content"&gt;
		&lt;EditText
			android:layout_height="wrap_content"
			android:layout_width="wrap_content"
			android:layout_weight="1"
			android:id="@+id/etName"
			android:fadeScrollbars="true"&gt;
		&lt;/EditText&gt;
		&lt;Button
			android:layout_width="wrap_content"
			android:layout_height="wrap_content"
			android:text="Create"
			android:id="@+id/btnCreate"&gt;
		&lt;/Button&gt;
		&lt;Button
			android:layout_width="wrap_content"
			android:layout_height="wrap_content"
			android:text="Clear"
			android:id="@+id/btnClear"&gt;
		&lt;/Button&gt;
	&lt;/LinearLayout&gt;
	&lt;LinearLayout
		android:layout_width="match_parent"
		android:layout_height="match_parent"
		android:id="@+id/llMain"
		android:orientation="vertical"&gt;
	&lt;/LinearLayout&gt;
&lt;/LinearLayout&gt;</pre>
<p> </p>
<p>Let’s examine the screen.</p>
<p><b>rgGravity</b> - this is a RadioGroup with three RadioButtons (<b>rbLeft</b>, <b>rbCenter</b>, <b>rbRight</b>). We will use this component to select the alignment of the created component.<br/><b>etName </b>- a text field, here we specify text that will be displayed on the created component.<br/><b>btnCreate </b>- button which launches the creation process.<br/><b>btnClear </b>- button, which deletes everything that we have created<br/><b>llMain </b>- vertical LinearLayout, in which components will be created</p>
<p><img style="border: 1px solid black;" src="/images/stories/lessons/L0017/xL0017_010.png.pagespeed.ic.as-VGOveJ8.png" alt="" width="699" height="524"/></p>
<p> </p>
<p>The screen is ready, let’s code the implementation. Open <b>MainActivity.java</b>. We will start by defining and finding all the required components. By the way, we have a few buttons that we will be using, so they need a listener. We will assign <b>Activity</b> as a <b>listener</b> (we need to add implements onClickListener) and create an empty (for now) <b>onClick</b> processing method:</p>
<pre class="brush:java">public class MainActivity extends Activity implements OnClickListener{

  LinearLayout llMain;
  RadioGroup rgGravity;
  EditText etName;
  Button btnCreate;
  Button btnClear;

int wrapContent = LinearLayout.LayoutParams.WRAP_CONTENT;

  
  /** Called when the activity is first created. */
  @Override
  public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.main);
    
    llMain = (LinearLayout) findViewById(R.id.llMain);
    rgGravity = (RadioGroup) findViewById(R.id.rgGravity);
    etName = (EditText) findViewById(R.id.etName);

    btnCreate = (Button) findViewById(R.id.btnCreate);
    btnCreate.setOnClickListener(this);

    btnClear = (Button) findViewById(R.id.btnClear);
    btnClear.setOnClickListener(this);
  }


  @Override
  public void onClick(View v) {
    // TODO Auto-generated method stub
    
  }
}</pre>
<p> </p>
<p>I’ve also created <b>wrapContent</b> variable and will store LinearLayout.LayoutParams.WRAP_CONTENT value in it to make the code less verbose.</p>
<p>Now let’s describe the process of creating a Button-component by filling in the onClick method:</p>
<pre class="brush:java">@Override
  public void onClick(View v) {
    switch (v.getId()) {
    case R.id.btnCreate:
      // creating LayoutParams with width and height defined by content
      LinearLayout.LayoutParams lParams = new LinearLayout.LayoutParams(
          wrapContent, wrapContent);
      // a variable to store alignment, will be LEFT by default
      int btnGravity = Gravity.LEFT;
      // define which RadioButton is checked and fill in bntGravity correspondingly 
      switch (rgGravity.getCheckedRadioButtonId()) {
      case R.id.rbLeft:
        btnGravity = Gravity.LEFT;
        break;
      case R.id.rbCenter:
        btnGravity = Gravity.CENTER_HORIZONTAL;
        break;
      case R.id.rbRight:
        btnGravity = Gravity.RIGHT;
        break;
      }
      // put the received alignment value into LayoutParams
      lParams.gravity = btnGravity;

      // create a Button, change text and add it to the LinearLayout
      Button btnNew = new Button(this);
      btnNew.setText(etName.getText().toString());
      llMain.addView(btnNew, lParams);

      break;
    }
  }</pre>
<p>Let’s look through the code. To begin with, we check whether <b>btnCreate </b>has been clicked - that is the creation button. Then we create <b>LayoutParams </b>with width and height defined by content. I am using here a variable that I mentioned before - wrapContent. It would have been quite verbose otherwise.</p>
<p>Then we create <b>btnGravity </b>variable and assign it alignment value LEFT by default. To define which RadioButton is checked at the moment, we will use <b>getCheckedRadioButtonId </b>method - it returns the ID of the checked RadioButton for a RadioGroup. We compare it to our three IDs and put the corresponding value into btnGravity variable. We assing this value to gravity in LayoutParams.</p>
<p>Then we create a button and assign it text from <b>etName</b>. Note that it is not sufficient to write getText as it doesn’t return text. You should also call toString method. And in the end add the created button to our LinearLayout.</p>
<p>Save everything and run the application. Add several buttons:</p>
<p><img style="border: 0px;" src="/images/stories/lessons/L0017/xL0017_020.png.pagespeed.ic.9EqRj0l5Xp.png" alt="" width="640" height="454"/></p>
<p> </p>
<p>Buttons should appear with the specified alignment and text.</p>
<p>When you enter text, the keyboard appears at the bottom and blocks the view. To make it disappear, you have to press the Back button on emulator or Esc on the common keyboard. If the keyboard that appears is Japanese or with hieroglyphs, open the context menu for the input field (left mouse button long press), choose Input method and choose Android Keyboard from the list.</p>
<p>The only thing left unimplemented is <b>Clear</b> button, which is intended to delete all the created content. To do so we need to fill in the <b>onClick</b> method and add one more case to the switch statement (v.getId()):</p>
<pre class="brush:java">    case R.id.btnClear:
      llMain.removeAllViews();
      Toast.makeText(this, "Deleted", Toast.LENGTH_SHORT).show();
      break;</pre>
<p> </p>
<p><b>removeAllViews</b> method removes all the child View-components from our LinearLayout. We show a success message using <b>Toast</b>. Save, run and check. Add a few buttons, click <b>Clear</b> button and see the result:</p>
<p><img style="border: 0px;" src="/images/stories/lessons/L0017/L0017_030_en.png.pagespeed.ce.uOTqzOvokd.png" alt="" width="640" height="449"/></p>
<p> </p>
<p>Finally, we have a quite dynamic application which can change itself.</p>
<p> </p>
<p>The complete lesson code:</p>
<div class="java">
<pre class="brush:xml">public class MainActivity extends Activity implements OnClickListener {

  LinearLayout llMain;
  RadioGroup rgGravity;
  EditText etName;
  Button btnCreate;
  Button btnClear;

  int wrapContent = LinearLayout.LayoutParams.WRAP_CONTENT;

  /** Called when the activity is first created. */
  @Override
  public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.main);

    llMain = (LinearLayout) findViewById(R.id.llMain);
    rgGravity = (RadioGroup) findViewById(R.id.rgGravity);
    etName = (EditText) findViewById(R.id.etName);

    btnCreate = (Button) findViewById(R.id.btnCreate);
    btnCreate.setOnClickListener(this);

    btnClear = (Button) findViewById(R.id.btnClear);
    btnClear.setOnClickListener(this);
  }

  @Override
  public void onClick(View v) {
    switch (v.getId()) {
    case R.id.btnCreate:
      // creating LayoutParams with width and height defined by content
      LinearLayout.LayoutParams lParams = new LinearLayout.LayoutParams(
          wrapContent, wrapContent);
      // a variable to store alignment, will be LEFT by default
      int btnGravity = Gravity.LEFT;
      // define which RadioButton is checked and fill in bntGravity correspondingly
      switch (rgGravity.getCheckedRadioButtonId()) {
      case R.id.rbLeft:
        btnGravity = Gravity.LEFT;
        break;
      case R.id.rbCenter:
        btnGravity = Gravity.CENTER_HORIZONTAL;
        break;
      case R.id.rbRight:
        btnGravity = Gravity.RIGHT;
        break;
      }
      // put the received alignment value into LayoutParams
      lParams.gravity = btnGravity;

      // create a Button, change text and add it to the LinearLayout
      Button btnNew = new Button(this);
      btnNew.setText(etName.getText().toString());
      llMain.addView(btnNew, lParams);

      break;

    case R.id.btnClear:
      llMain.removeAllViews();
      Toast.makeText(this, "Deleted", Toast.LENGTH_SHORT).show();
      break;

    }
  }

}</pre>
</div>
<p> </p>
<p>In the next lesson we will:</p>
<p>- change layout-parameters for already existing screen components</p><div><hr>
<!-- START: Modules Anywhere -->

<div class="custom">
	<p>Присоединяйтесь к нам в <b>Telegram</b>:</p>
<p>- в канале <a href="https://t.me/startandroid" target="_blank" rel="alternate noopener noreferrer">StartAndroid</a> публикуются ссылки на новые статьи с сайта startandroid.ru и интересные материалы с хабра, medium.com и т.п.</p>
<p>- в чатах решаем возникающие вопросы и проблемы по различным темам: <a href="https://t.me/startandroidchat" target="_blank" rel="alternate noopener noreferrer">Android</a>, <a href="https://t.me/kotlinchat" target="_blank" rel="alternate noopener noreferrer">Kotlin</a>, <a href="https://t.me/rxjavachat" target="_blank" rel="alternate noopener noreferrer">RxJava</a>, <a href="https://t.me/daggerchat" target="_blank" rel="alternate noopener noreferrer">Dagger</a>, <a href="https://t.me/androidtestingchat" target="_blank" rel="alternate noopener noreferrer">Тестирование</a> </p>
<p>- ну и если просто хочется поговорить с коллегами по разработке, то есть чат <a href="https://t.me/startandroidflood" target="_blank" rel="noopener noreferrer">Флудильня</a></p>
<p>- новый чат <a href="https://t.me/android_performance_chat" target="_blank" rel="noopener noreferrer">Performance</a> для обсуждения проблем производительности и для ваших пожеланий по содержанию курса по этой теме </p></div>
<!-- END: Modules Anywhere -->
<hr>
<br>

</div>	</section>
  
  <!-- footer -->
    <!-- //footer -->

			<hr class="divider-vertical"/><ul class="pager pagenav">
	<li class="previous">
		<a class="hasTooltip" title="Lesson 16. Creating layout programmatically. LayoutParams" aria-label="Previous article: Lesson 16. Creating layout programmatically. LayoutParams" href="/en/lessons/220-lesson-16-creating-layout-programmatically-layoutparams.html" rel="prev">
			<span class="icon-chevron-left" aria-hidden="true"></span> <span aria-hidden="true">Prev</span>		</a>
	</li>
	<li class="next">
		<a class="hasTooltip" title="Lesson 18. Changing layoutParams in a running application" aria-label="Next article: Lesson 18. Changing layoutParams in a running application" href="/en/lessons/224-lesson-18-changing-layoutparams-in-a-running-application.html" rel="next">
			<span aria-hidden="true">Next</span> <span class="icon-chevron-right" aria-hidden="true"></span>		</a>
	</li>
</ul>
	
	
	</article>
<!-- //Article -->


</div>
		</div>
		<!-- //MAIN CONTENT -->

		<!-- SIDEBAR LEFT -->
		<div class="t3-sidebar t3-sidebar-left col-xs-12 col-sm-4 col-sm-pull-8 col-md-3 col-md-pull-9 ">
			<div class="t3-module module " id="Mod87"><div class="module-inner"><div class="module-ct"><div class="mod-languages">
	<div class="pretext"><p><h1>Language</h1></p></div>

	<ul class="lang-inline" dir="ltr">
						<li>
			<a href="/ru/uroki/vse-uroki-spiskom/50-urok-17-sozdanie-view-komponent-v-rabochem-prilozhenii.html">
												<img src="/media/mod_languages/images/ru.gif.pagespeed.ce.bzLHrnbLL7.gif" alt="Русский" title="Русский"/>										</a>
			</li>
											<li class="lang-active">
			<a href="https://startandroid.ru/en/lessons/222-lesson-17-creating-view-components-in-a-running-application.html">
												<img src="/media/mod_languages/images/xen.gif.pagespeed.ic.a_9qHVLn30.png" alt="English (UK)" title="English (UK)"/>										</a>
			</li>
				</ul>

</div>
</div></div></div>
		</div>
		<!-- //SIDEBAR LEFT -->

	</div>
</div> 


  


  


	
<!-- BACK TOP TOP BUTTON -->
<div id="back-to-top" data-spy="affix" data-offset-top="300" class="back-to-top hidden-xs hidden-sm affix-top">
  <button class="btn btn-primary" title="Back to Top"><i class="fa fa-caret-up"></i></button>
</div>
<script type="text/javascript">(function($){$('#back-to-top').on('click',function(){$("html, body").animate({scrollTop:0},500);return false;});$(window).load(function(){if((parseInt($(window).height())*2)>(parseInt($(document).height()))){$('#back-to-top').hide();}});})(jQuery);</script>
<!-- BACK TO TOP BUTTON -->

<!-- FOOTER -->
<footer id="t3-footer" class="wrap t3-footer">

	
	<section class="t3-copyright">
		<div class="container">
			<div class="row">
				<div class="col-md-8 copyright ">
					

<div class="custom">
	<p>© Start Android, 2011-2020. Все права защищены, копирование материалов возможно только с разрешения автора </p>
<!-- START: Modules Anywhere -->

<div class="custom">
	<p>При возникновении каких-либо вопросов, используйте <a href="http://startandroid.ru/ru/about/cntct5.html" target="blank">форму обратной связи</a> </p></div>
<!-- END: Modules Anywhere -->
<p> </p>
<p> </p></div>

          <small>
            <a href="http://twitter.github.io/bootstrap/" title="Bootstrap by Twitter" target="_blank">Bootstrap</a> is a front-end framework of Twitter, Inc. Code licensed under <a href="https://github.com/twbs/bootstrap/blob/master/LICENSE" title="MIT License" target="_blank">MIT License.</a>
          </small>
          <small>
            <a href="http://fortawesome.github.io/Font-Awesome/" target="_blank">Font Awesome</a> font licensed under <a href="http://scripts.sil.org/OFL">SIL OFL 1.1</a>.
          </small>
				</div>
									<div class="col-md-4 poweredby text-hide">
						<a class="t3-logo t3-logo-color" href="http://t3-framework.org" title="Powered By T3 Framework" target="_blank" rel="nofollow">Powered by <strong>T3 Framework</strong></a>
					</div>
							</div>
		</div>
	</section>

</footer>
<!-- //FOOTER -->

</div>
<script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');ga('create','UA-19388196-4','auto');ga('send','pageview');</script>
</body>
</html>
