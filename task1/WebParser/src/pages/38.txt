
<!DOCTYPE html>
<html lang="ru-ru" dir="ltr" class='com_content view-article itemid-110 j39 mm-hover '>
<head>
<link href="https://www.startandroid.ru/templates/mycustomcss.css" rel="stylesheet" type="text/css">
	<base href="https://startandroid.ru/ru/uroki/vse-uroki-spiskom/398-urok-169-opengl-shejdery.html"/>
	<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
	<meta name="keywords" content="OpenGL, GLSurfaceView, Renderer, shader, шейдер, vertex, fragment, вершина, вершинный, фрагмент, фргаментный, glCreateShader, glShaderSource, glCompileShader, glGetShaderiv, glDeleteShader, glCreateProgram, glAttachShader, glLinkProgram, glGetProgramiv, glDeleteProgram, glUseProgram, glGetUniformLocation, glUniform4f, glGetAttribLocation, glVertexAttribPointer, glEnableVertexAttribArray, glDrawArrays"/>
	<meta name="rights" content="StartAndroid"/>
	<meta name="og:title" content="Урок 169. OpenGL. Шейдеры"/>
	<meta name="og:type" content="article"/>
	<meta name="og:image" content="https://startandroid.ru/images/stories/lessons/L0169/L0169_010.png"/>
	<meta name="og:url" content="https://startandroid.ru/ru/uroki/vse-uroki-spiskom/398-urok-169-opengl-shejdery.html"/>
	<meta name="og:site_name" content="StartAndroid"/>
	<meta name="og:description" content="Что такое шейдеры. Как использовать шейдеры в OpenGL в Android."/>
	<meta name="author" content="Dmitry Vinogradov"/>
	<meta name="description" content="Что такое шейдеры. Как использовать шейдеры в OpenGL в Android."/>
	<meta name="generator" content="Joomla! - Open Source Content Management"/>
	<title>Урок 169. OpenGL. Шейдеры</title>
	<link href="/templates/purity_iii/favicon.ico" rel="shortcut icon" type="image/vnd.microsoft.icon"/>
	<link href="/A.templates,,_purity_iii,,_local,,_css,,_bootstrap.css+components,,_com_jcomments,,_tpl,,_default,,_style.css,,qv==3002+plugins,,_content,,_hs_highlighter,,_lib,,_styles,,_shCore.css+plugins,,_content,,_hs_highlighter,,_lib,,_styles,,_shThemeDefault.css,Mcc.g9s2Fj-V5G.css.pagespeed.cf.C1U8Cas-X8.css" rel="stylesheet" type="text/css"/>
	
	
	
	<link href="http://www.startandroid.ru/plugins/content/jfusion/discussbot/tmpl/default/jfusion.css" rel="stylesheet" type="text/css"/>
	<link href="/A.templates,,_system,,_css,,_system.css+templates,,_purity_iii,,_local,,_css,,_template.css+templates,,_purity_iii,,_local,,_css,,_megamenu.css+templates,,_purity_iii,,_local,,_css,,_off-canvas.css+templates,,_purity_iii,,_fonts,,_font-awesome,,_css,,_font-awesome.min.css+templates,,_purity_iii,,_local,,_css,,_layouts,,_corporate.css+plugins,,_system,,_mediabox_ck,,_assets,,_mediaboxck.css+media,,_mod_languages,,_css,,_template.css,,q092552cf642fe2bdd8a0d9879112de23,Mcc.8bkeEgaG8c.css.pagespeed.cf.NQwL-2HVTk.css" rel="stylesheet" type="text/css"/>
	
	
	
	
	
	
	
	<style type="text/css">#mbCenter,#mbToolbar{background-color:#1a1a1a;-webkit-border-radius:10px;-khtml-border-radius:10px;-moz-border-radius:10px;border-radius:10px;-webkit-box-shadow:0 5px 20px rgba(0,0,0,.50);-khtml-box-shadow:0 5px 20px rgba(0,0,0,.50);-moz-box-shadow:0 5px 20px rgba(0,0,0,.50);box-shadow:0 5px 20px rgba(0,0,0,.50);-ms-filter:"progid:DXImageTransform.Microsoft.Shadow(Strength=5, Direction=180, Color='#000000')";filter: progid:DXImageTransform.Microsoft.Shadow(Strength=5, Direction=180, Color='#000000')}#mbOverlay{background-color:#000}#mbCenter.mbLoading{background-color:#1a1a1a}#mbBottom{color:#999}#mbTitle,#mbPrevLink,#mbNextLink,#mbCloseLink,#mbPlayLink,#mbPauseLink,#mbZoomMinus,#mbZoomValue,#mbZoomPlus{color:#fff}</style>
	<script type="application/json" class="joomla-script-options new">{"csrf.token":"ed37a4ab8f272e400044c1ea8adb7ccf","system.paths":{"root":"","base":""},"joomla.jtext":{"BUTTON_CANCEL":"Cancel","BUTTON_INITIATE":"Initiate Discussion","BUTTON_PUBLISH_NEW_DISCUSSION":"Publish New Discussion","BUTTON_REPUBLISH_DISCUSSION":"Republish Discussion","BUTTON_UNPUBLISH_DISCUSSION":"Unpublish Discussion","CONFIRM_THREAD_CREATION":"Initiate the discussion bot for this article? A thread will automatically be created in the forum and associated with this article.","CONFIRM_UNPUBLISH_DISCUSSION":"Do you want to unpublish this discussion? Note that this will not manipulate the forum in any way. It will simply remove the discussion from the article.","CONFIRM_PUBLISH_DISCUSSION":"This article has been previously initiated. Click 'Republish Discussion' to associate the article with the existing discussion (this can be undone by simply clicking 'Uninitiate Discussion' after initializing). Or click 'Publish New Discussion' to create a new thread and associate the article with the new discussion.","DISCUSSBOT_ERROR":"Error","HIDE_REPLIES":"Hide Replies","JYES":"Yes","SHOW_REPLIES":"Show Replies","SUBMITTING_QUICK_REPLY":"Submitting quick reply..."}}</script>
	<script src="/media/system/js/mootools-core.js,q092552cf642fe2bdd8a0d9879112de23.pagespeed.jm.ywlvbuicbl.js" type="text/javascript"></script>
	<script src="/media/system/js/core.js,q092552cf642fe2bdd8a0d9879112de23.pagespeed.ce.I4kCTD093I.js" type="text/javascript"></script>
	<script src="/media/system/js/mootools-more.js,q092552cf642fe2bdd8a0d9879112de23.pagespeed.jm.-6O1zP2hFm.js" type="text/javascript"></script>
	<script src="/plugins/content/hs_highlighter/lib/scripts/shCore.js+shAutoloader.js.pagespeed.jc.WXf0A72UUc.js"></script><script>eval(mod_pagespeed_su9IpL5SVr);</script>
	<script>eval(mod_pagespeed_WeiLV__hGm);</script>
	<script src="/media/jui/js/jquery.min.js,q092552cf642fe2bdd8a0d9879112de23.pagespeed.jm.Esjhv-eXHl.js" type="text/javascript"></script>
	<script src="/media,_jui,_js,_jquery-noconflict.js,q092552cf642fe2bdd8a0d9879112de23+media,_jui,_js,_jquery-migrate.min.js,q092552cf642fe2bdd8a0d9879112de23+plugins,_system,_t3,_base-bs3,_bootstrap,_js,_bootstrap.js,q092552cf642fe2bdd8a0d9879112de23+media,_system,_js,_caption.js,q092552cf642fe2bdd8a0d9879112de23+plugins,_system,_t3,_base-bs3,_js,_jquery.tap.min.js.pagespeed.jc.Zgymc-Cw8E.js"></script><script>eval(mod_pagespeed_mx8RjjKG3V);</script>
	<script>eval(mod_pagespeed_EEHT5I5lbD);</script>
	<script src="http://www.startandroid.ru/plugins/content/jfusion/discussbot/tmpl/default/jfusion.js" type="text/javascript"></script>
	<script>eval(mod_pagespeed_y3OBNTle2M);</script>
	<script>eval(mod_pagespeed_UCstg9erlS);</script>
	<script>eval(mod_pagespeed_1XadJYvQRa);</script>
	<script src="/plugins,_system,_t3,_base-bs3,_js,_off-canvas.js+plugins,_system,_t3,_base-bs3,_js,_script.js+plugins,_system,_t3,_base-bs3,_js,_menu.js+templates,_purity_iii,_js,_script.js+plugins,_system,_t3,_base-bs3,_js,_nav-collapse.js+plugins,_system,_mediabox_ck,_assets,_mediaboxck.min.js,qver==2.4.0.pagespeed.jc.tzMQyIb0Wy.js"></script><script>eval(mod_pagespeed_r6BAo9HvrJ);</script>
	<script>eval(mod_pagespeed_$6DR3H2ba0);</script>
	<script>eval(mod_pagespeed_oaBYG6qGe9);</script>
	<script>eval(mod_pagespeed_AmCkxaCr$c);</script>
	<script>eval(mod_pagespeed_ZlfQYd6O1_);</script>
	<script>eval(mod_pagespeed_rDcvdPCnuH);</script>
	<script type="text/javascript">window.addEvent('load',function(){var siteurl='https://startandroid.ru/';function path(){var args=arguments,result=[];for(var i=0;i<args.length;i++){result.push(args[i].replace('@',[siteurl,'plugins/content/hs_highlighter/lib/scripts/'].join('')));}return result;};SyntaxHighlighter.autoloader.apply(null,path('applescript            @shBrushAppleScript.js','actionscript3 as3      @shBrushAS3.js','bash shell             @shBrushBash.js','coldfusion cf          @shBrushColdFusion.js','cpp c                  @shBrushCpp.js','c# c-sharp csharp      @shBrushCSharp.js','css                    @shBrushCss.js','delphi pascal          @shBrushDelphi.js','diff patch pas         @shBrushDiff.js','erl erlang             @shBrushErlang.js','groovy                 @shBrushGroovy.js','java                   @shBrushJava.js','jfx javafx             @shBrushJavaFX.js','js jscript javascript  @shBrushJScript.js','perl pl                @shBrushPerl.js','php                    @shBrushPhp.js','text plain             @shBrushPlain.js','py python              @shBrushPython.js','ruby rails ror rb      @shBrushRuby.js','sass scss              @shBrushSass.js','scala                  @shBrushScala.js','sql                    @shBrushSql.js','vb vbnet               @shBrushVb.js','xml xhtml xslt html    @shBrushXml.js'));SyntaxHighlighter.defaults['auto-links']=false;SyntaxHighlighter.defaults['toolbar']=false;;SyntaxHighlighter.all();});JFusion.view='article';JFusion.enablePagination=1;JFusion.enableJumpto=0;JFusion.articelUrl[398]='/ru/uroki/vse-uroki-spiskom/398-urok-169-opengl-shejdery.html';jQuery(function($){initTooltips();$("body").on("subform-row-add",initTooltips);function initTooltips(event,container){container=container||document;$(container).find(".hasTooltip").tooltip({"html":true,"container":"body"});}});jQuery(window).on('load',function(){new JCaption('img.caption');});Mediabox.scanPage=function(){var links=jQuery('a').filter(function(i){if(jQuery(this).attr('rel')&&jQuery(this).data('mediaboxck_done')!='1'){var patt=new RegExp(/^lightbox/i);return patt.test(jQuery(this).attr('rel'));}});if(!links.length)return false;new Mediaboxck(links,{overlayOpacity:0.7,resizeOpening:1,resizeDuration:240,initialWidth:320,initialHeight:180,fullWidth:'0',defaultWidth:'640',defaultHeight:'360',showCaption:1,showCounter:1,loop:0,isMobileEnable:1,isMobile:false,mobileResolution:'640',attribType:'rel',showToolbar:'0',diapoTime:'3000',diapoAutoplay:'0',toolbarSize:'normal',medialoop:false,showZoom:0,counterText:'({x} of {y})',playerpath:'/plugins/system/mediabox_ck/assets/NonverBlaster.swf'},null,function(curlink,el){var rel0=curlink.rel.replace(/[[]|]/gi," ");var relsize=rel0.split(" ");return(curlink==el)||((curlink.rel.length>8)&&el.rel.match(relsize[1]));});};jQuery(document).ready(function(){Mediabox.scanPage();});</script>

	
<!-- META FOR IOS & HANDHELD -->
	<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"/>
	<style type="text/stylesheet">@-webkit-viewport   { width: device-width; }@-moz-viewport      { width: device-width; }@-ms-viewport       { width: device-width; }@-o-viewport        { width: device-width; }@viewport           { width: device-width; }</style>
	<script type="text/javascript">if(navigator.userAgent.match(/IEMobile\/10\.0/)){var msViewportStyle=document.createElement("style");msViewportStyle.appendChild(document.createTextNode("@-ms-viewport{width:auto!important}"));document.getElementsByTagName("head")[0].appendChild(msViewportStyle);}</script>
<meta name="HandheldFriendly" content="true"/>
<meta name="apple-mobile-web-app-capable" content="YES"/>
<!-- //META FOR IOS & HANDHELD -->




<!-- Le HTML5 shim and media query for IE8 support -->
<!--[if lt IE 9]>
<script src="//html5shim.googlecode.com/svn/trunk/html5.js"></script>
<script type="text/javascript" src="/plugins/system/t3/base-bs3/js/respond.min.js"></script>
<![endif]-->

<!-- You can add Google Analytics here or use T3 Injection feature -->

<!--[if lt IE 9]>
<link rel="stylesheet" href="/templates/purity_iii/css/ie8.css" type="text/css" />
<![endif]-->
	</head>

<body>

<div class="t3-wrapper corporate"> <!-- Need this wrapper for off-canvas menu. Remove if you don't use of-canvas -->

	
<!-- MAIN NAVIGATION -->
<header id="t3-mainnav" class="wrap navbar navbar-default navbar-fixed-top t3-mainnav">

	<!-- OFF-CANVAS -->
			
<button class="btn btn-default off-canvas-toggle " type="button" data-pos="left" data-nav="#t3-off-canvas" data-effect="off-canvas-effect-4">
  <i class="fa fa-bars"></i>
</button>

<!-- OFF-CANVAS SIDEBAR -->
<div id="t3-off-canvas" class="t3-off-canvas ">

  <div class="t3-off-canvas-header">
    <h2 class="t3-off-canvas-header-title">Sidebar</h2>
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
  </div>

  <div class="t3-off-canvas-body">
    <div class="t3-module module " id="Mod97"><div class="module-inner"><h3 class="module-title "><span>Самое читаемое</span></h3><div class="module-ct"><ul class="mostread mod-list">
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/ru/uroki/vse-uroki-spiskom/12-urok-3-sozdanie-avd-pervoe-prilozhenie-struktura-android-proekta.html" itemprop="url">
			<span itemprop="name">
				Урок 3. Создание AVD. Первое приложение. Структура Android-проекта.			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/ru/uroki/vse-uroki-spiskom/9-urok-2-ustanovka-i-nastrojka-sredy-razrabotki.html" itemprop="url">
			<span itemprop="name">
				Урок 2. Установка Android Studio			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/ru/uroki/vse-uroki-spiskom/13-urok-4-elementy-ekrana-i-ih-svojstva.html" itemprop="url">
			<span itemprop="name">
				Урок 4. Компоненты экрана и их свойства			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/ru/uroki/vse-uroki-spiskom/14-urok-5-layout-kak-ispolzovat-smena-orientatsii-ekrana.html" itemprop="url">
			<span itemprop="name">
				Урок 5. Layout-файл в Activity. XML представление. Смена ориентации экрана.			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/ru/uroki/vse-uroki-spiskom/4-urok-1-vvedenie.html" itemprop="url">
			<span itemprop="name">
				Урок 1. Введение.			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/ru/uroki/vse-uroki-spiskom/16-urok-9-obrabotchiki-sobytij-na-primere-button.html" itemprop="url">
			<span itemprop="name">
				Урок 9. Обработчики событий на примере Button.			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/ru/uroki/vse-uroki-spiskom/15-urok-6-vidy-layouts-kljuchevye-otlichija-i-svojstva.html" itemprop="url">
			<span itemprop="name">
				Урок 6. Виды Layouts. Ключевые отличия и свойства.			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/ru/uroki/vse-uroki-spiskom/38-urok-7-layout-parametry-dlja-view-elementov.html" itemprop="url">
			<span itemprop="name">
				Урок 7. Layout параметры для View-элементов.			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/ru/uroki/vse-uroki-spiskom/74-urok-34-hranenie-dannyh-sqlite.html" itemprop="url">
			<span itemprop="name">
				Урок 34. Хранение данных. SQLite			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/ru/uroki/vse-uroki-spiskom/82-urok42-spisok-listview.html" itemprop="url">
			<span itemprop="name">
				Урок 42. Список - ListView			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/ru/uroki/vse-uroki-spiskom/58-urok-21-sozdanie-i-vyzov-activity.html" itemprop="url">
			<span itemprop="name">
				Урок 21. Создание и вызов Activity			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/ru/uroki/vse-uroki-spiskom/24-urok-8-rabotaem-s-elementami-ekrana-iz-koda.html" itemprop="url">
			<span itemprop="name">
				Урок 8. Работаем с элементами экрана из кода			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/ru/uroki/vse-uroki-spiskom/73-urok-33-hranenie-dannyh-preferences.html" itemprop="url">
			<span itemprop="name">
				Урок 33. Хранение данных. Preferences.			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/ru/uroki/vse-uroki-spiskom/80-urok-40-layoutinflater-uchimsja-ispolzovat.html" itemprop="url">
			<span itemprop="name">
				Урок 40. LayoutInflater. Учимся использовать.			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/ru/uroki/vse-uroki-spiskom/489-urok-180-constraintlayout-osnovy.html" itemprop="url">
			<span itemprop="name">
				Урок 180. ConstraintLayout. Основы			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/ru/uroki/vse-uroki-spiskom/175-urok-105-android-3-fragments-dinamicheskaja-rabota.html" itemprop="url">
			<span itemprop="name">
				Урок 105. Android 3. Fragments. Динамическая работа			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/ru/uroki/vse-uroki-spiskom/17-urok-10-optimiziruem-realizatsiju-obrabotchikov.html" itemprop="url">
			<span itemprop="name">
				Урок 10. Оптимизируем реализацию обработчиков.			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/ru/uroki/vse-uroki-spiskom/157-urok-92-service-prostoj-primer.html" itemprop="url">
			<span itemprop="name">
				Урок 92. Service. Простой пример			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/ru/uroki/vse-uroki-spiskom/54-urok-19-pishem-prostoj-kalkuljator.html" itemprop="url">
			<span itemprop="name">
				Урок 19. Пишем простой калькулятор			</span>
		</a>
	</li>
	<li itemscope itemtype="https://schema.org/Article">
		<a href="/ru/uroki/vse-uroki-spiskom/67-urok-28-extras-peredaem-dannye-s-pomoschju-intent.html" itemprop="url">
			<span itemprop="name">
				Урок 28. Extras - передаем данные с помощью Intent			</span>
		</a>
	</li>
</ul>
</div></div></div>
  </div>

</div>
<!-- //OFF-CANVAS SIDEBAR -->

		<!-- //OFF-CANVAS -->

	<div class="container">

		<!-- NAVBAR HEADER -->
		<div class="navbar-header">

			<!-- LOGO -->
			<div class="logo logo-text">
				<div class="logo-text">
					<a href="/" title="StartAndroid">
						
												
						<span>StartAndroid</span>
					</a>
				</div>
			</div>
			<!-- //LOGO -->

											<button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".t3-navbar-collapse">
					<i class="fa fa-bars"></i>
				</button>
			
	    	    <!-- HEAD SEARCH -->
	    <div class="head-search">     
	      <form class="form-search" action="/ru/uroki/vse-uroki-spiskom.html" method="post">
	<div class="search">
		<label for="mod-search-searchword">Поиск</label><i class="fa fa-search"></i><input name="searchword" id="mod-search-searchword" maxlength="200" class="form-control " type="text" size="0"/>	<input type="hidden" name="task" value="search"/>
	<input type="hidden" name="option" value="com_search"/>
	<input type="hidden" name="Itemid" value="110"/>
	</div>
</form>

	    </div>
	    <!-- //HEAD SEARCH -->
	    
		</div>
		<!-- //NAVBAR HEADER -->

		<!-- NAVBAR MAIN -->
				<nav class="t3-navbar-collapse navbar-collapse collapse"></nav>
		
		<nav class="t3-navbar navbar-collapse collapse">
			<div class="t3-megamenu animate elastic" data-duration="400" data-responsive="true">
<ul itemscope itemtype="http://www.schema.org/SiteNavigationElement" class="nav navbar-nav level0">
<li itemprop='name' data-id="103" data-level="1">
<a itemprop='url' class="" href="/ru/" data-target="#">Главная </a>

</li>
<li itemprop='name' data-id="124" data-level="1">
<a itemprop='url' class="" href="/ru/novosti.html" data-target="#">Новости </a>

</li>
<li itemprop='name' class="active dropdown mega" data-id="104" data-level="1">
<a itemprop='url' class=" dropdown-toggle" href="/ru/uroki.html" data-target="#" data-toggle="dropdown">Уроки <em class="caret"></em></a>

<div class="nav-child dropdown-menu mega-dropdown-menu"><div class="mega-dropdown-inner">
<div class="row">
<div class="col-xs-12 mega-col-nav" data-width="12"><div class="mega-inner">
<ul itemscope itemtype="http://www.schema.org/SiteNavigationElement" class="mega-nav level1">
<li itemprop='name' class="current active" data-id="110" data-level="2">
<a itemprop='url' class="" href="/ru/uroki/vse-uroki-spiskom.html" data-target="#">Полный список </a>

</li>
<li itemprop='name' data-id="123" data-level="2">
<a itemprop='url' class="" href="/ru/uroki/100-pdf.html" target="_blank" data-target="#">Первые 100 уроков в PDF </a>

</li>
</ul>
</div></div>
</div>
</div></div>
</li>
<li itemprop='name' data-id="167" data-level="1">
<a itemprop='url' class="" href="/ru/blog.html" data-target="#">Блог </a>

</li>
<li itemprop='name' class="dropdown mega" data-id="131" data-level="1">
<a itemprop='url' class="customlight-background dropdown-toggle" href="#" data-target="#" data-toggle="dropdown">🆕Курсы<em class="caret"></em></a>

<div class="nav-child dropdown-menu mega-dropdown-menu"><div class="mega-dropdown-inner">
<div class="row">
<div class="col-xs-12 mega-col-nav" data-width="12"><div class="mega-inner">
<ul itemscope itemtype="http://www.schema.org/SiteNavigationElement" class="mega-nav level1">
<li itemprop='name' data-id="211" data-level="2">
<a itemprop='url' class="" href="/ru/courses/vse-kursy.html" data-target="#">🆕 Все курсы </a>

</li>
<li itemprop='name' data-id="132" data-level="2">
<a itemprop='url' class="" href="/ru/courses/dagger-2.html" data-target="#">Dagger 2 </a>

</li>
<li itemprop='name' data-id="138" data-level="2">
<a itemprop='url' class="" href="/ru/courses/rxjava.html" data-target="#">RxJava </a>

</li>
<li itemprop='name' data-id="185" data-level="2">
<a itemprop='url' class="" href="/ru/courses/testing.html" data-target="#">Тестирование </a>

</li>
<li itemprop='name' data-id="187" data-level="2">
<a itemprop='url' class="" href="/ru/courses/architecture-components.html" data-target="#">Architecture Components </a>

</li>
<li itemprop='name' data-id="194" data-level="2">
<a itemprop='url' class="" href="/ru/courses/performance.html" data-target="#">Производительность </a>

</li>
<li itemprop='name' data-id="223" data-level="2">
<a itemprop='url' class="" href="/ru/courses/kotlin.html" data-target="#">Kotlin </a>

</li>
</ul>
</div></div>
</div>
</div></div>
</li>
<li itemprop='name' class="dropdown mega" data-id="107" data-level="1">
<a itemprop='url' class=" dropdown-toggle" href="#" data-target="#" data-toggle="dropdown">Инфо<em class="caret"></em></a>

<div class="nav-child dropdown-menu mega-dropdown-menu"><div class="mega-dropdown-inner">
<div class="row">
<div class="col-xs-12 mega-col-nav" data-width="12"><div class="mega-inner">
<ul itemscope itemtype="http://www.schema.org/SiteNavigationElement" class="mega-nav level1">
<li itemprop='name' data-id="160" data-level="2">
<a itemprop='url' class="" href="/ru/about/cntct5.html" data-target="#">Вопрос </a>

</li>
<li itemprop='name' data-id="108" data-level="2">
<a itemprop='url' class="" href="/ru/about/osajte.html" data-target="#">О сайте </a>

</li>
<li itemprop='name' data-id="109" data-level="2">
<a itemprop='url' class="" href="/ru/about/ob-avtore.html" data-target="#">Об авторе </a>

</li>
<li itemprop='name' data-id="224" data-level="2">
<a itemprop='url' class="" href="/ru/about/reklama.html" data-target="#">Реклама </a>

</li>
</ul>
</div></div>
</div>
</div></div>
</li>
<li itemprop='name' data-id="184" data-level="1">
<a itemprop='url' class="" href="/ru/chats.html" data-target="#">Чаты </a>

</li>
<li itemprop='name' data-id="126" data-level="1">
<a itemprop='url' class="" href="/ru/login.html" data-target="#">Войти </a>

</li>
</ul>
</div>

		</nav>
    <!-- //NAVBAR MAIN -->

	</div>
</header>
<!-- //MAIN NAVIGATION -->






  


  


	
<div id="t3-mainbody" class="container t3-mainbody">
	<div class="row">

		<!-- MAIN CONTENT -->
		<div id="t3-content" class="t3-content col-xs-12 col-sm-8 col-sm-push-4 col-md-9 col-md-push-3">
						<div class="page-header clearfix">
		<h1 class="page-title">Полный список</h1>
	</div>

<div class="item-page clearfix">


<!-- Article -->
<article>
	<meta itemprop="inLanguage" content="ru-RU"/>
	<meta itemprop="url" content="/ru/uroki/vse-uroki-spiskom/398-urok-169-opengl-shejdery.html"/>

      
<header class="article-header clearfix">
	<h1 class="article-title" itemprop="headline">
					<a href="/ru/uroki/vse-uroki-spiskom/398-urok-169-opengl-shejdery.html" itemprop="url" title="Урок 169. OpenGL. Шейдеры">
				Урок 169. OpenGL. Шейдеры</a>
			</h1>

			</header>
    
    
  <!-- Aside -->
    <aside class="article-aside clearfix">
          	<dl class="article-info  muted">

		
			<dt class="article-info-term">
													Подробности							</dt>

			
			
			
										<dd class="published hasTooltip" title="Опубликовано: ">
				<i class="icon-calendar"></i>
				<time datetime="2015-10-27T10:00:00+03:00" itemprop="datePublished">
					27 октября 2015				</time>
			</dd>					
					
			
						</dl>
        
      </aside>  
    <!-- //Aside -->

  
  
  
	
  
	
	<section class="article-content clearfix">
		<p>В этом уроке:</p>
<p>- создаем шейдеры<br/> - рисуем треугольник</p>
<p> </p>
 
<p>Исходники уроков доступны на <a href="https://github.com/startandroid/lessons_opengl" target="_blank" rel="noopener noreferrer">гитхабе</a>.</p>
<p>На прошлом уроке мы создали простейший проект, в котором просто закрасили surface в зеленый цвет. При этом мы работали на совсем верхнем уровне и даже не коснулись основного OpenGL механизма, т.е. шейдеров.</p>
<p>Шейдеры – это программы, написанные на языке GLSL. В 3D графике все изображение строится из графических примитивов: точек, линий, треугольников. Чтобы нарисовать примитив, графический процессор должен знать координаты его вершин и цвет заливки для каждой точки. Именно эту информацию и предоставляют ему шейдеры. И, соответственно, существует два типа шейдеров: <br/> - вершинные, которые оперируют вершинами графических примитивов. <br/> - фрагментные, отвечают за цвет каждой точки графических примитивов</p>
<p>Т.е. если мы рисуем, например, треугольник, то окончательные координаты его вершин будут определены в вершинном шейдере. Этот шейдер будет вызван один раз для каждой вершины.</p>
<p>А цвет каждой точки треугольника будет определен в фрагментном шейдере. Этот шейдер будет вызван для каждой точки треугольника.</p>
<p>От нас требуется создать эти шейдеры и передать в них данные из нашего приложения. В этом уроке мы создадим вершинный и фрагментный шейдеры и нарисуем с их помощью треугольник.</p>
<p> </p>
<p>Для создания приложения можно взять проект с прошлого урока или создать его копию.</p>
<p>В папке res создадим папку raw и в ней создадим файл: <b>vertex_shader.glsl</b>:</p>
<pre class="brush:java">    attribute vec4 a_Position;

    void main() {
        gl_Position = a_Position;
    }
</pre>
<p>Это вершинный шейдер. Синтаксис похож на C или java. Разберем, что есть в этом шейдере.</p>
<p>Метод <b>main</b> – основной метод шейдера, который будет вызван системой.</p>
<p>Атрибут <b>a_Position</b> с типом vec4 – это вектор из 4 float значений. Этот атрибут может хранить в себе трехмерные координаты вершины графического примитива. Но кроме трех координат вершины (x,y,z) нам в дальнейшем понадобится еще одно значение, поэтому для передачи данных о вершинах используется vec4, а не vec3. Данные в этот атрибут мы будем передавать из нашего приложения.</p>
<p>Т.к. мы собрались рисовать треугольник, то мы будем передавать данные о трех вершинах. И для каждой из них будет выполнен этот шейдер, и в a_Position будут данные о текущей вершине.</p>
<p>Переменная <b>gl_Position</b> – это специальная переменная, в которую мы должны поместить данные о положении вершины. Т.е. эта переменная и есть результат работы вершинного шейдера. Эти данные далее будут использованы графическим процессором для определения положения вершин.</p>
<p>В нашем шейдере мы просто передаем значение из a_Position в gl_Position. Т.е. этот шейдер совсем простой и никак не влияет на входные данные (a_Position), а только транслирует их дальше (gl_Position).</p>
<p> </p>
<p>С вершинами разобрались. Теперь в res\raw создаем файл фрагментного шейдера.</p>
<p><b>fragment_shader.glsl</b>:</p>
<pre class="brush:java">    precision mediump float;
    uniform vec4 u_Color;

    void main() {
        gl_FragColor = u_Color;
    }
</pre>
<p>Первая строка устанавливает точность вычислений для float значений. Всего есть три режима: lowp, mediump, highp. Из названий понятна их точность. Но, разумеется, чем выше точность, тем ниже производительность.</p>
<p>Для работы с цветом вполне достаточно точности mediump. Поэтому используем ее в нашем шейдере. В вершинном шейдере мы точность не указывали, там уже по дефолту используется highp, т.к. для расчета вершин нужна высокая точность.</p>
<p>Метод <b>main</b> является основным, аналогично, как и в вершинном шейдере.</p>
<p>Переменная <b>u_Color</b> будет содержать в себе цвет. Она также имеет тип vec4, это вполне подходит под 4 компонента цвета RGBA. Значение в эту переменную мы будем задавать в нашем приложении. Слово <b>uniform</b> перед ней означает, что это значение будет всегда одинаково для всех фрагментов (точек), которые будут обработаны этим фрагментным шейдером.</p>
<p>Переменная <b>gl_FragColor</b> – это специальная переменная шейдера, в которую мы должны поместить значение цвета для текущего фрагмента. Напомню, что для каждой точки (фрагмента) треугольника система вызовет этот фрагментный шейдер, и шейдер должен (в gl_FragColor) вернуть значение цвета, которое система использует для рисования точки.</p>
<p>В gl_FragColor мы просто помещаем значение u_Color. Т.е. фрагментный шейдер, так же, как и вершинный очень простой и транслирует данные дальше без всяких изменений.</p>
<p> </p>
<p>Шейдеры готовы. Теперь наше приложение должно сделать кучу вещей, чтобы эти шейдеры заработали:</p>
<p>- прочитать шейдеры из файлов и скомпилировать их <br/> - создать из шейдеров программу<br/> - найти в программе входящие параметры и передать туда данные</p>
<p>Создаем классы.</p>
<p><b>FileUtils.java</b>:</p>
<pre class="brush:java">import android.content.Context;
import android.content.res.Resources;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;

public class FileUtils {
    public static String readTextFromRaw(Context context, int resourceId) {
        StringBuilder stringBuilder = new StringBuilder();
        try {
            BufferedReader bufferedReader = null;
            try {
                InputStream inputStream = context.getResources().openRawResource(resourceId);
                bufferedReader = new BufferedReader(new InputStreamReader(inputStream));
                String line;
                while ((line = bufferedReader.readLine()) != null) {
                    stringBuilder.append(line);
                    stringBuilder.append("\r\n");
                }
            } finally {
                if (bufferedReader != null) {
                    bufferedReader.close();
                }
            }
        } catch (IOException ioex) {
            ioex.printStackTrace();
        } catch (Resources.NotFoundException nfex) {
            nfex.printStackTrace();
        }
        return stringBuilder.toString();
    }
}
</pre>
<p>В этом классе только один метод <b>readTextFromRaw</b>, который по id прочтет raw-ресурс и вернет его содержимое в виде строки. Т.е. он будет читать содержимое файлов-шейдеров и возвращать нам это содержимое в текстовом виде.</p>
<p> </p>
<p>Следующий класс – <b>ShaderUtils.java</b>:</p>
<pre class="brush:java">import android.content.Context;

import static android.opengl.GLES20.GL_COMPILE_STATUS;
import static android.opengl.GLES20.GL_LINK_STATUS;
import static android.opengl.GLES20.glAttachShader;
import static android.opengl.GLES20.glCompileShader;
import static android.opengl.GLES20.glCreateProgram;
import static android.opengl.GLES20.glCreateShader;
import static android.opengl.GLES20.glDeleteProgram;
import static android.opengl.GLES20.glDeleteShader;
import static android.opengl.GLES20.glGetProgramiv;
import static android.opengl.GLES20.glGetShaderiv;
import static android.opengl.GLES20.glLinkProgram;
import static android.opengl.GLES20.glShaderSource;

public class ShaderUtils {
    public static int createProgram(int vertexShaderId, int fragmentShaderId) {
        final int programId = glCreateProgram();
        if (programId == 0) {
            return 0;
        }
        glAttachShader(programId, vertexShaderId);
        glAttachShader(programId, fragmentShaderId);
        glLinkProgram(programId);
        final int[] linkStatus = new int[1];
        glGetProgramiv(programId, GL_LINK_STATUS, linkStatus, 0);
        if (linkStatus[0] == 0) {
            glDeleteProgram(programId);
            return 0;
        }
        return programId;
    }

    static int createShader(Context context, int type, int shaderRawId) {
        String shaderText = FileUtils.readTextFromRaw(context, shaderRawId);
        return ShaderUtils.createShader(type, shaderText);
    }

    static int createShader(int type, String shaderText) {
        final int shaderId = glCreateShader(type);
        if (shaderId == 0) {
            return 0;
        }
        glShaderSource(shaderId, shaderText);
        glCompileShader(shaderId);
        final int[] compileStatus = new int[1];
        glGetShaderiv(shaderId, GL_COMPILE_STATUS, compileStatus, 0);
        if (compileStatus[0] == 0) {
            glDeleteShader(shaderId);
            return 0;
        }
        return shaderId;
    }
}
</pre>
<p>Здесь содержатся все методы по компиляции шейдеров и созданию из них программы. В принципе, пока можно не вникать в работу этого класса. Мы создаем его один раз и он не будет изменяться на протяжении нескольких уроков. Здесь не будет ни вершин, ни координат, ни цветов, ни вычислений. Мы просто вынесли в этот класс всю логику по подготовке шейдеров к использованию в нашем приложении. Так что пока можете просмотреть его поверхностно.</p>
<p>Начнем с методов createShader.</p>
<p><i>int createShader(int type, Context context, int shaderRawId)</i></p>
<p>Принимает на вход контекст, тип шейдера и id raw-ресурса. Читает содержимое (исходник) шейдера в строку и вызывает вторую версию метода</p>
<p><i>int createShader(int type, String shaderText)</i></p>
<p>Этот метод принимает на вход тип шейдера и его содержимое в виде строки, и далее вызывает кучу OpenGL методов по созданию и компиляции шейдера:</p>
<p><b>glCreateShader</b> – создает пустой объект шейдера и возвращает его id в переменную <b>shaderId</b>. На вход принимает тип шейдера: GL_VERTEX_SHADER (вершинный) или GL_FRAGMENT_SHADER (фрагментный).  Вернет 0 если по каким-то причинам шейдер создать не удалось.</p>
<p><b>glShaderSource</b> – берет исходник шейдера из строки и ассоциирует его с шейдером shaderId.</p>
<p><b>glCompileShader</b> – компилирует шейдер shaderId</p>
<p><b>glGetShaderiv</b> – позволяет получить статус компиляции (GL_COMPILE_STATUS) шейдера shaderId. Метод поместит статус в массив compileStatus, в элемент с индексом 0. Если компиляция прошла успешно, то статус будет равен 1 (GL_TRUE), иначе – 0 (GL_FALSE).</p>
<p>Далее мы проверяем, если компиляция не удалась, т.е. если compileStatus[0] == 0, то удаляем объект шейдера методом <b>glDeleteShader</b> и возвращаем 0.</p>
<p>Если же все ок, то возвращаем shaderId. Т.е. шейдер готов и у нас есть его id.</p>
<p> </p>
<p>Метод</p>
<p><i>int createProgram(Context context, int vertexShaderRawId, int fragmentShaderRawId)</i></p>
<p>создает программу. <b>Программа</b> – это просто пара шейдеров: вершинный + фрагментный. Эта пара шейдеров должна работать в связке, т.к. первый отвечает за вершины, а второй за цвета, и ни один из них по одиночке не даст нам итоговой картинки. Поэтому их объединяют в программу.</p>
<p>Метод принимает на вход id вершинного и фрагментного шейдеров.</p>
<p><b>glCreateProgram</b> – создает пустую программу и возвращает ее id в переменную <b>programId</b>. Если вместо id получаем 0, значит что-то пошло не так, возвращаем 0 вместо id программы.</p>
<p>Далее мы методом <b>glAttachShader</b> аттачим шейдеры к программе. Т.е. говорим системе, что шейдеры <b>vertexShaderId</b> и <b>fragmentShaderId</b> будут частями программы programId.</p>
<p><b>glLinkProgram</b> – формирует программу из приаттаченных шейдеров.</p>
<p><b>glGetProgramiv</b> – позволяет проверить статус формирования программы. Тут все аналогично шейдерному методу glGetShaderiv. Если что-то пошло не так, то удаляем программу методом <b>glDeleteProgram</b>.</p>
<p>Если все ок, то возвращаем programId. Т.е. программа готова и у нас есть ее id.</p>
<p> </p>
<p>Класс <b>OpenGLRenderer.java</b>. На прошлом уроке мы его уже создавали, но в нем будут серьезные изменения, поэтому привожу здесь весь код</p>
<pre class="brush:java">import android.content.Context;
import android.opengl.GLSurfaceView.Renderer;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;

import javax.microedition.khronos.egl.EGLConfig;
import javax.microedition.khronos.opengles.GL10;

import static android.opengl.GLES20.GL_COLOR_BUFFER_BIT;
import static android.opengl.GLES20.GL_FLOAT;
import static android.opengl.GLES20.GL_FRAGMENT_SHADER;
import static android.opengl.GLES20.GL_TRIANGLES;
import static android.opengl.GLES20.GL_VERTEX_SHADER;
import static android.opengl.GLES20.glClear;
import static android.opengl.GLES20.glClearColor;
import static android.opengl.GLES20.glDrawArrays;
import static android.opengl.GLES20.glEnableVertexAttribArray;
import static android.opengl.GLES20.glGetAttribLocation;
import static android.opengl.GLES20.glGetUniformLocation;
import static android.opengl.GLES20.glUniform4f;
import static android.opengl.GLES20.glUseProgram;
import static android.opengl.GLES20.glVertexAttribPointer;
import static android.opengl.GLES20.glViewport;

public class OpenGLRenderer implements Renderer {
    private Context context;
    private int programId;
    private FloatBuffer vertexData;
    private int uColorLocation;
    private int aPositionLocation;

    public OpenGLRenderer(Context context) {
        this.context = context;
        prepareData();
    }

    @Override
    public void onSurfaceCreated(GL10 arg0, EGLConfig arg1) {
        glClearColor(0f, 0f, 0f, 1f);
        int vertexShaderId = ShaderUtils.createShader(context, GL_VERTEX_SHADER, R.raw.vertex_shader);
        int fragmentShaderId = ShaderUtils.createShader(context, GL_FRAGMENT_SHADER, R.raw.fragment_shader);
        programId = ShaderUtils.createProgram(vertexShaderId, fragmentShaderId);
        glUseProgram(programId);
        bindData();
    }

    @Override
    public void onSurfaceChanged(GL10 arg0, int width, int height) {
        glViewport(0, 0, width, height);
    }

    private void prepareData() {
        float[] vertices = {-0.5f, -0.2f, 0.0f, 0.2f, 0.5f, -0.2f,};
        vertexData = ByteBuffer.allocateDirect(vertices.length * 4).order(ByteOrder.nativeOrder()).asFloatBuffer();
        vertexData.put(vertices);
    }

    private void bindData() {
        uColorLocation = glGetUniformLocation(programId, "u_Color");
        glUniform4f(uColorLocation, 0.0f, 0.0f, 1.0f, 1.0f);
        aPositionLocation = glGetAttribLocation(programId, "a_Position");
        vertexData.position(0);
        glVertexAttribPointer(aPositionLocation, 2, GL_FLOAT, false, 0, vertexData);
        glEnableVertexAttribArray(aPositionLocation);
    }

    @Override
    public void onDrawFrame(GL10 arg0) {
        glClear(GL_COLOR_BUFFER_BIT);
        glDrawArrays(GL_TRIANGLES, 0, 3);
    }
}
</pre>
<p>В конструкторе вызываем метод prepareData, в котором будут подготовлены данные для передачи в шейдеры.</p>
<p>В <b>onSurfaceCreated</b> ставим черным дефолтный цвет очистки. Затем, методами класса ShaderUtils создаем шейдеры, получаем их id: vertexShaderId (вершинный) и fragmentShaderId (фрагментный), создаем из них программу programId, и методом <b>glUseProgram</b> сообщаем системе, что эту программу надо использовать для построения изображения. Далее, методом bindData передаем данные в шейдеры.</p>
<p>Метод <b>onSurfaceChanged</b> без изменений, задаем область рисования на всю поверхность surface-компонента.</p>
<p>Теперь самое интересное.</p>
<p>Метод <b>prepareData</b>. В этом методе мы подготавливаем данные для передачи их в шейдеры. СНачала создаем массив из 6-ти элементов. Я в коде разделил эти 6 элементов на три строки для наглядности, т.к. на самом деле это координаты трех точек: (-0.5, -0.2), (0, 0.2) и (0.5, -0.2). Эти три точки – вершины треугольника, который мы собираемся нарисовать. Почему такие маленькие значения? Особенно по сравнению с канвой, где мы использовали координаты от 0 до 1000. Потому что OpenGL свою область рисования (т.е. экран) приведет к диапазону [-1, 1] по ширине и высоте.</p>
<p><img style="border: 1px solid black;" src="/images/stories/lessons/L0169/xL0169_010.png.pagespeed.ic.YaEq0WwGul.png" alt="" width="318" height="258"/></p>
<p> </p>
<p>И мы учитываем это при рисовании треугольника</p>
<p><img style="border: 1px solid black;" src="/images/stories/lessons/L0169/xL0169_020.png.pagespeed.ic.R07we8tzl1.png" alt="" width="318" height="258"/></p>
<p> </p>
<p>Далее нам придется сконвертить float[] массив в буфер <b>FloatBuffer</b>, т.к. это необходимо для передачи данных в шейдеры.</p>
<p>Методом <b>allocateDirect</b> выделяем память под буфер. Т.к. вершины в массиве у нас в формате float, а размер float равен 4 байта, то нам необходимо байт памяти: 4 * кол-во вершин.</p>
<p>Метод <b>order</b> задает порядок байтов. Если кто хочет вникнуть в тему – вам <a href="https://ru.wikipedia.org/wiki/%D0%9F%D0%BE%D1%80%D1%8F%D0%B4%D0%BE%D0%BA_%D0%B1%D0%B0%D0%B9%D1%82%D0%BE%D0%B2" target="_blank" rel="noopener noreferrer">сюда</a>. Но пока что это для нас не имеет значения и мы укажем здесь ByteOrder.nativeOrder() – системный дефолтный порядок.</p>
<p>Метод <b>asFloatBuffer</b> возвращает нам созданный буфер байтов, как FloatBuffer.</p>
<p>Методом <b>put</b> передаем ему данные о вершинах из массива vertices.</p>
<p> </p>
<p>Метод <b>bindData</b>. Здесь мы будем передавать данные в шейдер.</p>
<p>Методом <b>glGetUniformLocation</b> мы в переменную uColorLocation получаем положение в шейдере нашей uniform переменной u_Color (см. код фрагментного шейдера fragment_shader.glsl).</p>
<p>Методом <b>glUniform4f</b> передаем в uColorLocation 4 float значения, которые являются RGBA компонентами синего цвета (0,0,1,1). Эти данные пойдут в шейдер в переменную u_Color.</p>
<p>Аналогично, методом <b>glGetAttribLocation</b> в переменную aPositionLocation получаем положение attribute переменной a_Position (см. код вершинного шейдера vertex_shader.glsl).</p>
<p>Методом <b>position</b> сообщаем системе, что данные из vertexData надо будет читать начиная с элемента с индексом 0, т.е. с самого начала.</p>
<p>Методом <b>glVertexAttribPointer</b> мы сообщаем системе, что шейдеру для своего атрибута a_Position необходимо читать данные из массива vertexData. А параметры этого метода позволяют подробно задать правила чтения. Рассмотрим какие параметры идут на вход этому методу</p>
<p><i>void glVertexAttribPointer (int indx, int size, int type, boolean normalized, int stride, Buffer ptr)</i></p>
<p><b>int indx</b> – переменная указывающая на положение атрибута в шейдере. Тут все понятно, используем ранее полученную aPositionLocation, которая знает где сидит a_Position.</p>
<p><b>int size</b> – указывает системе, сколько элементов буфера vertexData брать для заполнения атрибута a_Position.</p>
<p><strong>int type</strong> – передаем GL_FLOAT, т.к. у нас float значения</p>
<p><strong>boolean normalized</strong> – этот флаг нам пока неактуален, ставим false</p>
<p><strong>int stride</strong> – используется при передаче более чем одного атрибута в массиве. Мы пока передаем данные только для одного атрибута, поэтому пока ставим 0. Но в последующих уроках мы еще используем этот параметр.</p>
<p><strong>Buffer ptr</strong> – буффер с данными, т.е. vertexData.</p>
<p> </p>
<p>Остановимся подробнее на параметре <b>size</b>. Если вы помните, a_Position у нас имеет тип vec4. Т.е. он состоит из 4 float значений. И по идее, если мы хотим нарисовать три точки, мы должны послать 3*4 = 12 значений, чтобы вершинный шейдер вызвался три раза и атрибут был заполнен на все 4 значения.</p>
<p>Т.е. если мы посылаем например такой массив [v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12] и укажем size = 4, то система будет брать каждые 4 значения, писать их в атрибут и запускать вершинный шейдер. Т.к. мы будем рисовать три вершины (мы это еще укажем чуть позднее), то шейдер отработает три раза и значение a_Position у него при этих запусках будут следующие:</p>
<p>Первый запуск: v1, v2, v3, v4<br/>Второй запуск: v5, v6, v7, v8<br/>Третий запуск: v9, v10, v11, v12</p>
<p>Но мы посылаем всего 6 значений (например v1, v2, v3, v4, v5, v6) и сообщаем системе, что для заполнения атрибута ей необходимо брать только 2 значения. Т.е. система будет брать каждые два значения, писать их в атрибут и запускать вершинный шейдер. В итоге шейдер будет иметь следующие значения a_Position:</p>
<p>Первый запуск: v1, v2, 0, 1<br/>Второй запуск: v3, v4, 0, 1<br/>Третий запуск: v5, v6, 0 ,1</p>
<p>Первые два элемента атрибута система возьмет из массива, а в третий и четвертый мы ей ничего не дали, поэтому она поставит дефолтные значения. Дефолтные значения для vec4 таковы (0,0,0,1).</p>
<p> </p>
<p>Все, данные в шейдер мы передали. И напоследок нам необходимо включить атрибут aPositionLocation методом <b>glEnableVertexAttribArray</b>.</p>
<p> </p>
<p>В методе <b>onDrawFrame</b> мы очищаем экран дефолтным цветом и методом <b>glDrawArrays</b> просим систему нарисовать нам треугольник. На вход этому методу идут параметры:</p>
<p><b>int mode</b> – здесь мы указываем какой тип графических примитивов хотим рисовать. В нашем случае это треугольник: GL_TRIANGLES.</p>
<p><b>int first</b> – указываем, что брать вершины из массива вершин надо начиная с элемента с индексом 0, т.е. с первого элемента массива</p>
<p><b>int count</b> – кол-во вершин которое необходимо использовать для рисования. Указываем 3, т.к. для треугольника необходимы три вершины. И в массиве мы передавали данные для трех вершин.</p>
<p> </p>
<p>Код для класса MainActivity.java можно взять с прошлого урока, только надо будет чуть поменять строку:</p>
<pre class="brush:java"> glSurfaceView.setRenderer(new OpenGLRenderer(this)); </pre>
<p>т.к. мы добавили Context в конструктор рендера.</p>
<p> </p>
<p>Приложение готово. Все это мы накодили, чтобы просто нарисовать синий треугольник на черном фоне… )</p>
<p> </p>
<p>Запускаем приложение</p>
<p><img style="border: 1px solid black;" src="/images/stories/lessons/L0169/xL0169_030.png.pagespeed.ic.wmoqi6jIyH.png" alt="" width="480" height="800"/></p>
<p>Синий треугольник - ОК</p>
<p> </p>
<p>Очень много инфы получилось для одного урока, но меньше уже никак было не разбить. Если что-то непонятно, не унывайте, это норма. В следующих уроках будем рисовать разные графические примитивы, добавим передачу цвета, используем текстуры, и вся эта система передачи данных в шейдеры станет гораздо понятнее.</p><div><hr>
<!-- START: Modules Anywhere -->

<div class="custom">
	<p>Присоединяйтесь к нам в <b>Telegram</b>:</p>
<p>- в канале <a href="https://t.me/startandroid" target="_blank" rel="alternate noopener noreferrer">StartAndroid</a> публикуются ссылки на новые статьи с сайта startandroid.ru и интересные материалы с хабра, medium.com и т.п.</p>
<p>- в чатах решаем возникающие вопросы и проблемы по различным темам: <a href="https://t.me/startandroidchat" target="_blank" rel="alternate noopener noreferrer">Android</a>, <a href="https://t.me/kotlinchat" target="_blank" rel="alternate noopener noreferrer">Kotlin</a>, <a href="https://t.me/rxjavachat" target="_blank" rel="alternate noopener noreferrer">RxJava</a>, <a href="https://t.me/daggerchat" target="_blank" rel="alternate noopener noreferrer">Dagger</a>, <a href="https://t.me/androidtestingchat" target="_blank" rel="alternate noopener noreferrer">Тестирование</a> </p>
<p>- ну и если просто хочется поговорить с коллегами по разработке, то есть чат <a href="https://t.me/startandroidflood" target="_blank" rel="noopener noreferrer">Флудильня</a></p>
<p>- новый чат <a href="https://t.me/android_performance_chat" target="_blank" rel="noopener noreferrer">Performance</a> для обсуждения проблем производительности и для ваших пожеланий по содержанию курса по этой теме </p></div>
<!-- END: Modules Anywhere -->
<hr>
<br>

</div><div id="jfusioncontent398">                <div class="jfusionclearfix jfusionButtonArea">
                    	<a class="readon jfusionButton jfusionBtnDiscuss" target="_blank" href="http://forum.startandroid.ru/viewtopic.php?t=6764"><span>Обсудить на форуме [5 replies]</span></a>
                </div>
                <div class="jfusionclearfix jfusionButtonConfirmationBox" style="display: none;">
                </div></div>	</section>
  
  <!-- footer -->
    <!-- //footer -->

			<hr class="divider-vertical"/><ul class="pager pagenav">
	<li class="previous">
		<a class="hasTooltip" title="Урок 168. OpenGL. Введение." aria-label="Previous article: Урок 168. OpenGL. Введение." href="/ru/uroki/vse-uroki-spiskom/397-urok-168-opengl-vvedenie.html" rel="prev">
			<span class="icon-chevron-left" aria-hidden="true"></span> <span aria-hidden="true">Назад</span>		</a>
	</li>
	<li class="next">
		<a class="hasTooltip" title="Урок 170. OpenGL. Графические примитивы" aria-label="Next article: Урок 170. OpenGL. Графические примитивы" href="/ru/uroki/vse-uroki-spiskom/399-urok-170-opengl-graficheskie-primitivy.html" rel="next">
			<span aria-hidden="true">Вперёд</span> <span class="icon-chevron-right" aria-hidden="true"></span>		</a>
	</li>
</ul>
	
	
	</article>
<!-- //Article -->


</div>
		</div>
		<!-- //MAIN CONTENT -->

		<!-- SIDEBAR LEFT -->
		<div class="t3-sidebar t3-sidebar-left col-xs-12 col-sm-4 col-sm-pull-8 col-md-3 col-md-pull-9 ">
			<div class="t3-module module " id="Mod87"><div class="module-inner"><div class="module-ct"><div class="mod-languages">
	<div class="pretext"><p><h1>Language</h1></p></div>

	<ul class="lang-inline" dir="ltr">
									<li class="lang-active">
			<a href="https://startandroid.ru/ru/uroki/vse-uroki-spiskom/398-urok-169-opengl-shejdery.html">
												<img src="/media/mod_languages/images/ru.gif.pagespeed.ce.bzLHrnbLL7.gif" alt="Русский" title="Русский"/>										</a>
			</li>
								<li>
			<a href="/en/">
												<img src="/media/mod_languages/images/xen.gif.pagespeed.ic.a_9qHVLn30.png" alt="English (UK)" title="English (UK)"/>										</a>
			</li>
				</ul>

</div>
</div></div></div><div class="t3-module module " id="Mod323"><div class="module-inner"><div class="module-ct">

<div class="custom">
	<div align="center">
<h2>Автор сайта</h2>
<p><img src="/images/stories/pic/150x150xdmitryvinogradov.jpg.pagespeed.ic.ZW6Ncwy8-8.jpg" width="150" height="150"/></p>
<p>Дмитрий Виноградов</p>
<p>Подробнее можно <a href="https://youtu.be/xPuiCBRmJDg?t=102" target="_blank" rel="noopener noreferrer">посмотреть</a> или <a href="/ru/about/ob-avtore.html" target="_blank" rel="noopener noreferrer">почитать</a>.</p>
<p>Никакие другие люди не имеют к этому сайту никакого отношения и просто занимаются плагиатом.</p>
</div></div>
</div></div></div><div class="t3-module module " id="Mod139"><div class="module-inner"><div class="module-ct"><div class="bannergroup">

	<div class="banneritem">
																																																																			<a href="/ru/component/banners/click/9.html" title="Курс корутины">
							<img src="https://startandroid.ru/images/banners/xbanner_coroutines.png.pagespeed.ic.z0-kLuGVjP.png" alt="Курс корутины" width="240" height="400"/>
						</a>
																<div class="clr"></div>
	</div>

</div>
</div></div></div><div class="t3-module module " id="Mod91"><div class="module-inner"><div class="module-ct">

<div class="custom">
	<div align="center"><h2>Социальные сети</h2></div>
<p> </p>
<div align="center">
<p><img src="/images/stories/pic/telegram.png.pagespeed.ce.nkfL74AMTR.png" alt="" width="100" height="100"/></p>
<p>В <a href="https://t.me/startandroid" target="_blank">канале</a> я публикую ссылки на интересные и полезные статьи по Android</p>
<p>В <a href="https://t.me/startandroidchat" target="_blank">чате</a> можно обсудить вопросы и проблемы, возникающие при разработке</p>
</div>

<br><br>
<script type="text/javascript" src="//vk.com/js/api/openapi.js?144"></script>
<!-- VK Widget -->

<div align="center"><h4>Группа ВКонтакте</h4>
<div id="vk_groups"></div>
</div>
<script type="text/javascript">VK.Widgets.Group("vk_groups",{mode:3},36284347);</script>
<br><br>
</div>
</div></div></div><div class="t3-module module " id="Mod90"><div class="module-inner"><div class="module-ct">

<div class="custom">
	<h1>Поддержка проекта</h1>
<p><a href="https://money.yandex.ru/prepaid/" target="_blank">Яндекс</a><br/><strong>410011180491924</strong></p>
<p><a href="http://www.webmoney.ru/rus/addfunds/index.shtml">WebMoney</a><br/><strong>R248743991365</strong><br/><strong>Z551306702056</strong></p>
<p><a href="https://www.paypal.me/startandroidcourse">Paypal</a></p>

</div>
</div></div></div>
		</div>
		<!-- //SIDEBAR LEFT -->

	</div>
</div> 


  


  


	
<!-- BACK TOP TOP BUTTON -->
<div id="back-to-top" data-spy="affix" data-offset-top="300" class="back-to-top hidden-xs hidden-sm affix-top">
  <button class="btn btn-primary" title="Back to Top"><i class="fa fa-caret-up"></i></button>
</div>
<script type="text/javascript">(function($){$('#back-to-top').on('click',function(){$("html, body").animate({scrollTop:0},500);return false;});$(window).load(function(){if((parseInt($(window).height())*2)>(parseInt($(document).height()))){$('#back-to-top').hide();}});})(jQuery);</script>
<!-- BACK TO TOP BUTTON -->

<!-- FOOTER -->
<footer id="t3-footer" class="wrap t3-footer">

	
	<section class="t3-copyright">
		<div class="container">
			<div class="row">
				<div class="col-md-8 copyright ">
					

<div class="custom">
	<p>© Start Android, 2011-2020. Все права защищены, копирование материалов возможно только с разрешения автора </p>
<!-- START: Modules Anywhere -->

<div class="custom">
	<p>При возникновении каких-либо вопросов, используйте <a href="http://startandroid.ru/ru/about/cntct5.html" target="blank">форму обратной связи</a> </p></div>
<!-- END: Modules Anywhere -->
<p> </p>
<p> </p></div>

          <small>
            <a href="http://twitter.github.io/bootstrap/" title="Bootstrap by Twitter" target="_blank">Bootstrap</a> is a front-end framework of Twitter, Inc. Code licensed under <a href="https://github.com/twbs/bootstrap/blob/master/LICENSE" title="MIT License" target="_blank">MIT License.</a>
          </small>
          <small>
            <a href="http://fortawesome.github.io/Font-Awesome/" target="_blank">Font Awesome</a> font licensed under <a href="http://scripts.sil.org/OFL">SIL OFL 1.1</a>.
          </small>
				</div>
									<div class="col-md-4 poweredby text-hide">
						<a class="t3-logo t3-logo-color" href="http://t3-framework.org" title="Powered By T3 Framework" target="_blank" rel="nofollow">Powered by <strong>T3 Framework</strong></a>
					</div>
							</div>
		</div>
	</section>

</footer>
<!-- //FOOTER -->

</div>
<script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');ga('create','UA-19388196-4','auto');ga('send','pageview');</script>
</body>
</html>
